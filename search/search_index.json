{"config": {"lang": ["en"], "separator": "[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+", "pipeline": ["stemmer"]}, "docs": [{"location": "", "title": "o(\u3003'\u25bd'\u3003)o Hi!", "text": "<p>This is note for Hanshi.</p> <p> \u6211 /   \u6700\u8fd1\u66f4\u65b0 /   Blog</p>"}, {"location": "changelog/", "title": "\u66f4\u65b0\u8bb0\u5f55", "text": ""}, {"location": "changelog/#2023", "title": "2023", "text": "2023-12-29\u00b6 <p> \ud83d\udd17 note.preminstrel.com ONLINE</p> <p> CS &gt; \u4eba\u5de5\u667a\u80fd &gt; CMU 11-785 Introduction to Deep Learning</p>"}, {"location": "cs/", "title": "Computer Science", "text": "<p>Abstract</p> <p>\u8fd9\u91cc\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u76f8\u5173\u5185\u5bb9\u7684\u7b14\u8bb0/\u5b9e\u9a8c\u3002</p>"}, {"location": "cs/#table-of-contents", "title": "Table of Contents", "text": "Carnegie Mellon University          <ul> <li> 11-785 Introduction to Deep Learning  2964  65  11 mins              1703918342 </li> </ul>"}, {"location": "cs/ai/", "title": "\u4eba\u5de5\u667a\u80fd", "text": "<p>Abstract</p> <p>\u4eba\u5de5\u667a\u80fd\u76f8\u5173\u5b66\u4e60\u8d44\u6599\u3002\u5305\u62ec\uff1a</p> <ul> <li>CMU 11-785 Introduction to Deep Learning</li> <li>CMU 18-661 Introduction to Machine Learning</li> </ul>"}, {"location": "cs/ai/#table-of-contents", "title": "Table of Contents", "text": "<ul> <li>11-785 Introduction to Deep Learning</li> </ul>"}, {"location": "cs/ai/idl/", "title": "CMU 11-785 Introduction to Deep Learning", "text": "<p> \u7ea6 2960 \u4e2a\u5b57  65 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 11 \u5206\u949f</p> <p>Abstract</p> <p>CMU 11-785 IDL Homework, Project \u548c\u8bc4\u4ef7\u3002</p> <p>Course Website\uff1ahttp://deeplearning.cs.cmu.edu</p> <p>11-785 \u7684\u662f Bhiksha Raj \u8bb2\u7684\uff0c\u5f88\u591a\u6211\u4e4b\u524d\u4ee5\u4e3a\u81ea\u5df1\u638c\u63e1\u4e86\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u4e00\u77e5\u534a\u89e3\u7684\u4e1c\u897f\uff0c\u5728\u8fd9\u8282\u8bfe\u4e0a\u90fd\u5f97\u5230\u4e86\u7b54\u6848\u3002</p>"}, {"location": "cs/ai/idl/#_1", "title": "\u8bfe\u7a0b\u8bc4\u4ef7", "text": "<p>11-785 \u7684 workload \u7b97\u6bd4\u8f83\u5927\u7684\uff0c\u9664\u4e86\u6bcf\u5468\u7684 Quiz \u3001course project\uff0c\u6bcf\u6b21\u7684 Homework \u90fd\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0c\u7b2c\u4e00\u4e2a\u90e8\u5206\u662f\u4ece\u96f6\u5f00\u59cb\u5b9e\u73b0\u81ea\u5df1\u7684 MyTorch\uff0cBonus \u90e8\u5206\u8fd8\u5305\u62ec\u4e86 Auto Gradient \u7684\u5b9e\u73b0\uff0c\u6709\u70b9\u50cf Tianqi Chen \u8bb2\u7684 DLSys \u7684 needle\uff0c\u548c needle \u7684\u533a\u522b\u662f\u4e0d\u7528\u81ea\u5df1\u5199 numpy CPU backend \u548c CUDA backend\uff1b\u7b2c\u4e8c\u4e2a\u90e8\u5206\u662f\u6253 Kaggle\uff0c\u548c\u5168\u73ed\u540c\u5b66\u4e00\u8d77\u5237\u70b9\u6570\u6253\u699c\u3002\u867d\u7136\u8fd9\u95e8\u8bfe\u7684 workload \u5f88\u5927\uff0c\u4f46\u662f\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u8fd9\u95e8\u8bfe\u7684 infra \u76f8\u5f53\u5b8c\u5584\uff0c\u53ef\u4ee5\u548c\u8457\u540d\u7684 CSAPP \u5ab2\u7f8e\uff0c\u6709 25 \u4e2a TA\u3001\u5199\u5f97\u5f88\u597d\u7684 write-up\u3001\u6bcf\u5468\u7684 recitation\u3001Hackthon\u7b49\uff0cPiazza \u4e0a\u7684\u54cd\u5e94\u901f\u5ea6\u4e5f\u662f\u8d85\u7ea7\u5feb\u3002</p> <p>\u4ece\u6211\u81ea\u8eab\u7684\u611f\u53d7\u51fa\u53d1\uff0c\u6211\u89c9\u5f97\u8fd9\u95e8\u8bfe\u6700\u5927\u7684\u4ef7\u503c\u662f\u628a\u5f88\u591a\u4e1c\u897f\u8bb2\u6e05\u695a\u7684\u540c\u65f6\uff0c\u7528\u6bd4\u8f83\u597d\u7684 Homework \u6765\u5de9\u56fa coding \u80fd\u529b\uff0c\u6bcf\u5468\u7684 Quiz \u6765\u5de9\u56fa\u7406\u8bba\u77e5\u8bc6\u3002\u8bf4\u5b9e\u8bdd\uff0c\u5728\u4e0a\u8fd9\u95e8\u8bfe\u4e4b\u524d\uff0c\u6211\u505a DL \u7684\u4e00\u4e9b Project \u5f88\u591a\u65f6\u5019\u90fd\u662f\u76f4\u63a5\u4f9d\u846b\u82a6\u753b\u74e2\uff0c\u5e76\u4e0d\u6e05\u695a\u8fd9\u4e00\u884c\u4ee3\u7801\u80cc\u540e\u771f\u6b63\u5728\u8fd0\u884c\u4ec0\u4e48\uff08\u53ea\u77e5\u9053\u8fd9\u884c\u4ee3\u7801\u662f\u7528\u6765\u5e72\u4ec0\u4e48\u7684\uff09\uff0c\u4e5f\u5bf9\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u53ea\u6709\u4e00\u4e2a\u6bd4\u8f83\u6a21\u7cca\u7684\u8ba4\u77e5\uff08\u672c\u8bfe\u7684 HW Part1 \u5b8c\u7f8e\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff09\uff0c\u8fd9\u95e8\u8bfe\u7edd\u5bf9\u914d\u5f97\u4e0a\u662f CMU \u7684\u795e\u8bfe\u4e4b\u4e00\u3002\u6b63\u5982 Bhiksha \u5728\u7b2c\u4e00\u8282\u8bfe\u8bf4\u7684\uff0c\u5982\u679c\u8fd9\u95e8\u8bfe\u62ff\u4e86 A\uff0c\u8bf4\u660e\u4f60\u5df2\u7ecf\u521d\u6b65\u5177\u5907\u4e86\u5728 DL \u5de5\u4e1a\u754c\u5e72\u6d3b\u7684\u80fd\u529b\u4e86\u3002</p> <p>Comment</p> <p>Workload: \u2605\u2605\u2605\u2605\u2606</p> <p>Reward: \u2605\u2605\u2605\u2605\u2606</p> <p>Recommendation: \u2605\u2605\u2605\u2605\u2605</p>"}, {"location": "cs/ai/idl/#homework", "title": "Homework", "text": "<p>\u8fd9\u95e8\u8bfe\u60f3\u8981\u62ff\u9ad8\u5206\u786e\u5b9e\u4e0d\u96be\uff0c\u56e0\u4e3a\u6ca1\u6709\u8003\u8bd5\uff0c\u4f5c\u4e1a\u7ed9\u7684\u65f6\u95f4\u4e5f\u6bd4\u8f83\u5145\u8db3\uff0c\u6240\u4ee5\u5927\u5bb6\u5206\u6570\u57fa\u672c\u90fd\u5f88\u9ad8\u3002\u7531\u4e8e Bhiksha \u662f\u5728 LTI \u5b66\u9662\u505a Speech \u7684\uff0c\u6240\u4ee5\u8fd9\u95e8\u8bfe\u597d\u50cf\u9664\u4e86\u7b2c\u4e8c\u4e2a Homework \u662f Face Classification &amp; Verification\uff0c\u5176\u4ed6 Homework \u90fd\u662f\u5173\u4e8e Speech Recognition \u7684\uff08\u76f8\u6bd4\u4e4b\u4e0b\uff0cECE \u5b66\u9662\u7684 Intro to DL \u5927\u90e8\u5206\u7684 Homework \u548c Project \u90fd\u662f\u5173\u4e8e Computer Vision \u7684\uff09\u3002</p> <p>\u5173\u4e8eworkload\uff0c\u8fd9\u95e8\u8bfe\u6211\u611f\u89c9\u4e3b\u8981\u662f\u524d\u9762\u82b1\u7684\u65f6\u95f4\u7a0d\u5fae\u591a\u4e00\u4e9b\uff0c\u6700\u540e\u4e00\u4e2a\u6708\u6211\u51e0\u4e4e\u6ca1\u6709\u82b1\u4ec0\u4e48\u65f6\u95f4\u5728\u4e0a\u9762\u3002\u770b\u8d77\u6765 write-up \u5f88\u5413\u4eba\uff0c\u4f46\u662f\u5176\u5b9e\u505a\u8d77\u6765\u771f\u7684\u8fd8\u597d\u3002 \u6bcf\u4e2a Homework \u7684 Part1 \u90fd\u53ef\u4ee5\u4e00\u5929\u5185\u5b8c\u6210\uff08\u4e0d\u8fc7\u6211\u8bb0\u5f97 Bonus \u4e2d\u7b2c\u4e00\u4e2a Autograd \u6211 Debug \u82b1\u7684\u65f6\u95f4\u6709\u70b9\u957f\uff09\u3002\u867d\u7136 Part2 \u6bcf\u4e2a\u90fd\u7ed9\u4e86\u5feb\u4e00\u4e2a\u6708\u7684\u8bad\u7ec3\u65f6\u95f4\uff0c\u4f46\u662f\u6211\u611f\u89c9\u53ea\u8981\u6a21\u578b\u7ed3\u6784\u8bbe\u8ba1\u5f97\u8fd8\u884c\uff0c\u9002\u5f53\u52a0\u70b9 regularization \u548c\u5176\u4ed6\u7684 trick \u57fa\u672c\u90fd\u53ef\u4ee5\u8fbe\u5230 high cutoff \u62ff\u6ee1\u5206\u3002\u53cd\u800c\u6211\u662f\u89c9\u5f97\u6bcf\u5468\u7684 Quiz \u8fd8\u633a\u6298\u78e8\u7684\uff0c\u6bcf\u5468\u90fd\u5f97\u82b1\u70b9\u65f6\u95f4\u53bb\u505a\u4e00\u4e0b\u3002\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\u8ba1\u7b97\u8d44\u6e90\u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u5982\u679c\u5929\u5929\u8dd1\u7684\u8bdd\uff0c400 \u5200\u7684 GCP \u548c 150 \u5200\u7684 AWS credits \u8fdc\u8fdc\u4e0d\u591f\u3002</p>"}, {"location": "cs/ai/idl/#hw1p1", "title": "HW1P1", "text": "<p>HW1P1 (Introduction to MyTorch, Autograd) \u5305\u62ec\u4e86 MyTorch \u548c Autograd \u4e24\u4e2a\u90e8\u5206\uff0c\u5176\u4e2d Autograd \u662f Bonus \u90e8\u5206\u3002MyTorch \u7684\u5b9e\u73b0\u57fa\u672c\u4e0a\u5c31\u662f\u628a PyTorch \u7684 API \u7528 Numpy \u5b9e\u73b0\u4e00\u904d\uff0c\u5305\u62ec MLP\u3001 \u4e00\u4e9b\u5e38\u89c1\u7684\u6fc0\u6d3b\u51fd\u6570\u3001\u5e38\u89c1\u7684 loss\u3001BatchNorm\u3001SGD\u3001AdamW\u3001Dropout \u7b49\u7b49\u3002\u8fd9\u90e8\u5206\u7684\u4ee3\u7801\u91cf\u4e0d\u7b97\u5f88\u5927\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u90e8\u5206\u7684\u4ee3\u7801\u9700\u8981\u5199\u5f97\u5f88\u89c4\u8303\uff0c\u56e0\u4e3a\u540e\u9762\u7684 HW \u90fd\u662f\u57fa\u4e8e\u8fd9\u90e8\u5206\u7684\u4ee3\u7801\u6765\u5b9e\u73b0\u7684\uff0c\u6240\u4ee5\u9700\u8981\u4fdd\u8bc1\u8fd9\u90e8\u5206\u7684\u4ee3\u7801\u6ca1\u6709 bug\u3002Autograd \u7b97\u662f\u4e00\u4e2a\u5c0f\u96be\u70b9\uff0c\u4e3b\u8981\u7684\u5de5\u4f5c\u91cf\u662f\u53bb\u7406\u89e3\u4ed6\u7684 framework\uff0c\u4e86\u89e3\u4ed6\u662f\u600e\u4e48\u5199 automatic differentitation \u548c autograd engine \u7684\uff0c\u4e0b\u9762\u7b97\u662f\u4e00\u4e2a\u6700\u7b80\u5355\u7684 skeleton\uff1a</p> <pre><code>class Operation:\n    def __init__(self, inputs, output, gradients_to_update, backward_operation):\n        self.inputs = inputs\n        self.output = output\n        self.gradients_to_update = gradients_to_update\n        self.backward_operation = backward_operation\n\n\nclass Autograd:\n    def __init__(self):\n        if getattr(self.__class__, \"_has_instance\", False):\n            raise RuntimeError(\"Cannot create more than 1 Autograd instance\")\n        self.__class__._has_instance = True\n\n        self.gradient_buffer = GradientBuffer()\n        self.operation_list = []\n\n    def __del__(self):\n        del self.gradient_buffer\n        del self.operation_list\n        self.__class__._has_instance = False\n\n    def add_operation(self, inputs, output, gradients_to_update, backward_operation):\n        if len(inputs) != len(gradients_to_update):\n            raise Exception(\n                \"Number of inputs must match the number of gradients to update!\"\n            )\n        for input in inputs:\n            self.gradient_buffer.add_spot(input)\n        self.operation_list.append(\n            Operation(inputs, output, gradients_to_update, backward_operation)\n        )\n\n    def backward(self, divergence):\n        for operation in reversed(self.operation_list):\n            if operation == self.operation_list[-1]:\n                grad_front = divergence\n            else:\n                grad_front = self.gradient_buffer.get_param(operation.output)\n            grad_ret = operation.backward_operation(grad_front, *operation.inputs)\n\n            for i in range(len(operation.inputs)):\n                if operation.gradients_to_update[i] is None:\n                    self.gradient_buffer.update_param(operation.inputs[i], grad_ret[i])\n                else:\n                    operation.gradients_to_update[i] += grad_ret[i]\n\n    def zero_grad(self):\n        self.gradient_buffer.clear()\n        self.operation_list = []\n</code></pre>"}, {"location": "cs/ai/idl/#hw1p2", "title": "HW1P2", "text": "<p>HW1P2 (Frame Level Classification of Speech) \u5c31\u662f\u7b80\u5355\u7528 MLP \u642d\u79ef\u6728\uff0c\u5c1d\u8bd5\u5404\u79cd\u7f51\u7edc\u7684 structure\uff0cactivations \u548c\u4e00\u4e9b tricks\u3002\u56e0\u4e3a\u5f53\u65f6 AWS \u7684 credit \u8fd8\u6ca1\u5230\u8d26\uff0c\u6211\u5c31\u76f4\u63a5\u7528\u4e86 GCP server \u53bb\u505a\u3002\u6211\u53d1\u73b0 slack \u7684 Client API \u8fd8\u662f\u633a\u597d\u7528\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u6765 log training \u7684\u7ed3\u679c\u5b9e\u65f6\u53d1\u5230 slack \u4e0a\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u6bcf\u6b21\u90fd\u53bb\u770b log \u4e86\u3002</p> <pre><code>Asuka = WebClient(token=\"...\")\ntry:\n    response = Asuka.chat_postMessage(channel='#training', \n        text=f\"Training Finished! best_precision: {best_precision} at epoch {best_epoch}. \n        The best result is submitted to Kaggle.\"\n    )\n    response = Asuka.files_upload(\n        channels='#training',\n        file=img_filename,\n        title=\"Training Plot\",\n    )\n    assert response[\"ok\"]\nexcept SlackApiError as e:\n    print(f\"Error: {e.response['error']}\")\n</code></pre> <p>\u6700\u540e submit \u5230 Autolab \u7684\u65f6\u5019\u8fd8\u9700\u8981\u63d0\u4ea4 ablation study \u7684\u4e00\u4e9b wandb log \u7b49\u7ed3\u679c\uff0c\u518d\u5199\u4e00\u4e2a\u7b80\u5355\u7684 README \u5c31\u53ef\u4ee5\u4e86\u3002Autolab \u4f1a\u7528 MOSS \u68c0\u6d4b\u4ee3\u7801\u7684\u76f8\u4f3c\u5ea6\uff0c\u6240\u4ee5\u5f80\u5e74\u7684\u4ee3\u7801\u6700\u597d\u4e0d\u8981\u53c2\u8003\u3002\u6700\u540e Part2 \u7684\u7ed3\u679c\u662f\u5206\u4e24\u4e2a\u90e8\u5206\u7684\uff0c\u4e00\u4e2a\u662f\u622a\u6b62\u524d\u53ef\u4ee5\u770b\u89c1\u7684 public leaderboard\uff0c\u53e6\u4e00\u4e2a\u662f\u622a\u6b62\u540e\u7684 private leaderboard\uff1b\u76f8\u5f53\u4e8e\u53ef\u4ee5\u53bb\u62df\u5408\u7684\u7b2c\u4e8c\u4e2a valid set \u548c test \u5427\uff0c\u9700\u8981\u4e24\u4e2a\u90fd\u8fbe\u5230 high cutoff \u624d\u80fd\u62ff\u6ee1\u5206\u3002</p>"}, {"location": "cs/ai/idl/#hw2p1", "title": "HW2P1", "text": "<p>HW2P1 (MyTorch: Convolutional Neural Networks) \u662f\u624b\u64b8 CNNs \u7684\uff0c\u5305\u62ec Conv\u3001Pooling\u3001\u548c resampling layers \u7b49\u7684 forward/backward\uff0c\u6700\u540e\u8fd8\u6709\u4e2a\u5c0f toy training task \u53ef\u4ee5\u7a0d\u5fae\u73a9\u4e00\u4e0b\uff0c\u8fd9\u91cc\u9762\u5f88\u91cd\u8981\u7684\u4e00\u4e2a\u601d\u60f3\u662f \u201cScanning MLPs == CNNs\u201d\u3002\u76f8\u6bd4 MLP\uff0cCNNs \u7684 backpropagation \u5199\u6cd5\u662f\u53ef\u4ee5\u8ba9\u6211\u66f4\u52a0\u611f\u53d7\u5230 gradient \u662f\u600e\u4e48\u4f20\u64ad\u7684\uff0c\u5199\u5b8c\u540e\u5bf9\u53cd\u5411\u4f20\u64ad\u7684\u7406\u89e3\u4f1a\u66f4\u52a0\u6df1\u523b\u3002</p> <p>\u5728 Bonus \u91cc\u9762\uff0c\u4f1a\u8ba9\u6211\u4eec\u5b8c\u6210 Dropout2D \u548c BatchNorm2D \u7684\u5b9e\u73b0\uff0c\u8fd9\u91cc\u9762\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cDropout2D \u7684\u5b9e\u73b0\u548c Dropout1D \u7684\u5b9e\u73b0\u662f\u4e0d\u4e00\u6837\u7684\uff0cDropout2D \u7684\u5b9e\u73b0\u9700\u8981\u4fdd\u8bc1\u6bcf\u4e2a channel \u7684 dropout mask \u662f\u4e00\u6837\u7684\uff0c\u800c Dropout1D \u7684\u5b9e\u73b0\u5219\u4e0d\u9700\u8981\u3002\u6700\u540e\u8fd8\u9700\u8981\u81ea\u5df1 implement \u4e00\u4e0b ResNet\uff1b\u4e0d\u8fc7\u8fd9\u6b21\u7684 Autograd \u786e\u5b9e\u6bd4\u4e0a\u6b21\u7b80\u5355\u591a\u4e86\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u6846\u67b6\u5df2\u7ecf\u719f\u4e86\uff0c\u800c\u4e14\u8fd9\u6b21\u7684 Autograd \u7684\u5185\u5bb9\u4e5f\u548c\u672c\u8eab\u7684 HW2P1 \u90e8\u5206\u6709 overlap\u3002</p>"}, {"location": "cs/ai/idl/#hw2p2", "title": "HW2P2", "text": "<p>HW2P2 (Face Classification &amp; Verification) \u662f\u6211\u89c9\u5f97\u82b1\u65f6\u95f4\u6700\u957f\u7684\u4e00\u4e2a HWxP2\u4e86\uff0c\u56e0\u4e3a\u4ed6\u4f1a\u6709\u4e24\u4e2a Kaggle \u6bd4\u8d5b\u8981\u53bb\u6253\uff0c\u5305\u62ec\u4e86 classification \u548c verification\u3002\u7531\u4e8e\u4e0d\u80fd\u7528 pretrained \u6743\u91cd\uff0c\u5f97 training from scratch\uff0c\u6240\u4ee5\u521a\u5f00\u59cb\u5b66\u4e60\u7387\u4e00\u4e0d\u5c0f\u5fc3\u5c31\u4f1a\u8ba9\u68af\u5ea6\u7206\u70b8\uff0c\u5bfc\u81f4 loss \u53d8\u6210 nan \u4e86\uff0c\u6240\u4ee5\u4e00\u5f00\u59cb\u53ea\u80fd\u7528\u6bd4\u8f83\u5c0f\u7684 learning rate\u53bb\u505a\u3002\u521a\u5f00\u59cb\u8bad\u7ec3\u4e5f\u4f1a\u9047\u5230\u51c6\u786e\u7387\u4e00\u76f4\u5f88\u4f4e\uff0closs \u4e0b\u964d\u4e5f\u6bd4\u8f83\u6162\u7684\u60c5\u51b5\uff0c\u4f46\u662f\u8bad\u7ec3\u4e86\u5341\u51e0\u4e2a epoch \u4e4b\u540e\u4f1a\u6709\u4e00\u4e2a\u7c7b\u4f3c\u4e8e turning point \u4e00\u6837\u7684\u4f4d\u7f6e\uff0c\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u4e4b\u540e\u6a21\u578b\u4f3c\u4e4e\u627e\u5230\u6b63\u786e\u7684\u4f18\u5316\u65b9\u5411\uff0c\u6536\u655b\u5feb\u4e86\u5f88\u591a\u3002\u8fd8\u6709\u4e00\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u70b9\u662f\uff0c\u7531\u4e8e\u8ba1\u7b97\u8d44\u6e90\u7684\u9650\u5236\uff0c\u6240\u4ee5\u7528 ResNet \u53bb\u505a\u8fd9\u4e2a\u4efb\u52a1\u662f\u4e0d\u592a\u73b0\u5b9e\u7684\uff0c\u56e0\u4e3a FLOPs \u592a\u5927\u4e86\uff0c\u8bad\u7ec3\u76f8\u5bf9\u6162\u5f88\u591a\u3002\u6700\u540e\u6211\u9009\u4e86 ConvNeXt\uff0c\u5229\u7528\u4e86\u4ed6\u7684 group convolution \u7684\u7279\u6027\uff0c\u53ef\u4ee5\u7528\u6bd4\u8f83\u5c11\u7684 FLOPs \u53bb\u5b9e\u73b0\u6bd4\u8f83\u597d\u7684\u6548\u679c\u3002</p> <p>model \u5728\u5206\u7c7b\u7684\u4efb\u52a1\u4e0a\u8bad\u7ec3\u5f97\u5230\u4e86\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684 backbone \u4e4b\u540e\u5c31\u53ef\u4ee5\u5f00\u59cb\u8fdb\u884c verification \u7684 task\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u52a0\u4e86\u4e00\u4e9b\u989d\u5916\u7684 loss\uff0c\u8ba9\u4ed6\u5728 latent space \u4e0a distance \u66f4\u52a0\u4f18\u5316\uff0c\u6bd4\u5982 ArcFace \u4e4b\u7c7b\u7684\u3002</p>"}, {"location": "cs/ai/idl/#hw3p1", "title": "HW3P1", "text": "<p>HW3P1 \u7684\u540d\u5b57\u7279\u522b\u6709\u610f\u601d\uff0c\u53eb \u201cRNNs, GRUs and Search, Oh My!\u201d\u3002\u76f8\u6bd4\u524d\u4e24\u6b21\u7684 HWxP1\uff0c\u8fd9\u6b21\u8981\u96be\u4e00\u4e9b\uff0c\u5c24\u5176\u662f search \u90e8\u5206\u3002\u8fd9\u6b21\u7684 RNNs \u548c GRUs \u7684\u90e8\u5206\u4e3b\u8981\u662f\u5b9e\u73b0\u4e86 RNNs\u3001GRUs \u548c CTC loss \u7684 forward \u548c backward\u3002\u6211\u8bb0\u5f97\u591a\u5c42 RNNs \u7684 backward \u4f1a\u6bd4\u8f83\u590d\u6742\uff0c\u8fd8\u662f\u9700\u8981\u505c\u4e0b\u6765\u60f3\u4e00\u4e0b\u7684\u3002\u800c GRUs \u7684 backward \u5219\u9700\u8981\u5927\u91cf\u52a8\u624b\u8ba1\u7b97\u504f\u5bfc\u6570\uff0c\u4e5f\u7b97\u662f\u53e6\u5916\u4e00\u79cd\u6298\u78e8\u3002</p> <p>search \u90e8\u5206\u4e2d\uff0cgreedy search \u6bd4\u8f83\u7b80\u5355\uff0cbeam search \u7b97\u6cd5\u7b97\u662f\u6bd4\u8f83\u96be debug \u7684\u4e86\uff0c\u5173\u952e\u662f write-up \u521a\u5f00\u59cb\u8fd8\u5199\u9519\u4e86\uff0c\u5bfc\u81f4\u6211\u82b1\u4e86\u5f88\u957f\u65f6\u95f4\uff0c\u4e0d\u8fc7\u6700\u540e\u5199\u51fa\u6765\u8fd8\u662f\u633a\u6709\u6210\u5c31\u611f\u7684\uff1b\u6700\u540e\u5728 Piazza \u4e0a\u95ee\u4e86 TA \u624d\u77e5\u9053\u662f\u9898\u76ee\u6709\u95ee\u9898\u3002</p>"}, {"location": "cs/ai/idl/#hw3p2", "title": "HW3P2", "text": "<p>HW3P2 (Utterance to Phoneme Mapping) \u4e5f\u662f\u4e00\u4e2a speech \u7684 Kaggle \u6bd4\u8d5b\uff0c\u4e3b\u8981\u662f\u7528\u6765\u8ba9\u6211\u4eec\u719f\u6089\u5982\u4f55 set up GRU/LSTM based models \u7684\uff0c\u5305\u62ec\u4e86 RNNs\u3001GRUs\u3001LSTMs\u3001CTC loss\u7b49\u7b49\u3002\u8fd9\u6b21\u7684 Kaggle \u6bd4\u8d5b\u7684\u6570\u636e\u96c6\u6bd4\u8f83\u5927\uff0c\u6240\u4ee5\u8bad\u7ec3\u65f6\u95f4\u4e5f\u6bd4\u8f83\u957f\uff0c\u540c\u65f6\u4e5f\u7528\u4e86\u4e00\u4e9b\u5916\u90e8\u7684 package \u6765\u8ba1\u7b97 CTC loss\u3002\u8fd9\u662f\u6211\u7b2c\u4e00\u6b21\u5904\u7406\u4e0d\u540c\u957f\u5ea6\u7684 mfcc \u6570\u636e\uff0c\u5728\u5904\u7406\u6570\u636e\u7684\u65f6\u5019\u7ecf\u5e38\u9700\u8981 pack/unpack \u6765\u8f93\u5165\u5230 RNNs \u91cc\u9762\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e5f\u662f\u6bd4\u8f83\u5bb9\u6613\u51fa\u9519\u7684\u3002\u540c\u65f6\uff0c\u8fd9\u6b21\u7684 model \u8fd8\u9700\u8981\u7528 CNN \u4f5c\u4e3a\u4e00\u4e2a feature extractor \u53bb\u6293\u4e00\u4e2a\u7a97\u53e3\u7684 mfcc\uff0c\u7136\u540e\u518d\u8f93\u5165\u5230 RNNs\u3002</p>"}, {"location": "cs/ai/idl/#hw4p1", "title": "HW4P1", "text": "<p>HW4P1 (Language Modeling using RNNs) \u5e94\u8be5\u7b97\u662f\u6700\u6742\u7684 HWxP1 \u4e86\uff0c\u4ece attention \u7684 implementation \u5230\u6574\u4e2a\u7684 training \u90fd\u8981\u6c42\u4e0d\u4f4e\u3002\u6700\u540e\u8fd8\u9700\u8981\u7528 OpenAI \u7684 API \u53bb\u6d4b\u8bd5\u4e00\u4e0b ppl\uff0c\u5f53\u505a\u5206\u6570\u7684\u4e00\u90e8\u5206\uff0c\u53e6\u5916\u4e00\u90e8\u5206\u8981\u5728 Autolab \u91cc\u9762\u5237\u70b9\u6570\u3002\u4e0d\u8fc7\u6211\u611f\u89c9\u8fd9\u95e8\u8bfe\u5f88\u591a\u57fa\u672c\u53ea\u9700\u8981\u7ed3\u6784\u8bbe\u8ba1\u7684\u8fd8\u53ef\u4ee5\uff0c\u53ef\u4ee5 overfit training set \u4e4b\u540e\u52a0\u70b9 regularization \u5c31\u53ef\u4ee5\u8fbe\u5230\u8981\u6c42\u4e86\u3002\u6211\u505a\u7684\u65f6\u5019\u90fd\u6ca1\u6ce8\u610f\u5230 Autolab \u7684\u90e8\u5206\u5c45\u7136\u8fd8\u9650\u5236\u4e86 submission \u7684\u6b21\u6570\uff0c\u8fd8\u662f\u4e4b\u540e\u5728 Piazza \u4e0a\u770b\u5230\u6709\u4ebacomplain \u624d\u77e5\u9053\u7684\u3002</p>"}, {"location": "cs/ai/idl/#hw4p2", "title": "HW4P2", "text": "<p>\u6700\u540e\u4e00\u4e2a HW4P2 (Attention-based Speech Recognition) \u6211\u89c9\u5f97\u5176\u5b9e\u548c Part 1 \u5f88\u50cf\uff0c\u505a\u7684\u4e8b\u60c5\u90fd\u51e0\u4e4e\u5dee\u4e0d\u591a\u3002\u4e0d\u8fc7\u8fd9\u6b21\u7684 write-up \u4e5f\u6709\u5751\u7684\u5730\u65b9\uff1a\u5728 write-up \u91cc\u9762\u7684\u7ed3\u679c\u662f\u5148\u5efa\u8bae\u6211\u4eec\u7528 LSTM/Transformer encoder \u518d\u5728\u4e2d\u95f4\u63d2\u5165\u4e00\u4e2a CNNs \u6765\u62bd\u53d6\u7279\u5f81\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u8fd9\u6837\u505a\u7684\u8bdd\uff0c\u8bad\u7ec3\u7684\u65f6\u5019\u6536\u655b\u6027\u5e76\u4e0d\u662f\u5f88\u597d\uff0c\u6240\u4ee5\u6211\u6700\u540e\u8fd8\u662f\u7528\u4e86 CNN encoder + LSTM + Transformer \u4f5c\u4e3a encoder \u7684\u7ed3\u6784\u3002\u8fd9\u6b21\u7684 training \u4e5f\u82b1\u4e86\u5f88\u957f\u65f6\u95f4\uff0c\u56e0\u4e3a\u8fd9\u6b21\u7684\u6570\u636e\u96c6\u5de8\u5927\uff0ctrain \u4e00\u6b21\u5f97\u8981\u51e0\u5929\uff0c\u611f\u89c9\u5bf9\u6ca1\u6709 GPU \u7684\u540c\u5b66\u6765\u8bf4\u6709\u70b9\u96be\u5ea6\u3002</p> <p>Write-up \u7684\u6700\u540e\u4e00\u4e2a section \u4e5f\u6bd4\u8f83 touching:</p> <p>Comment</p> <p>This homework is a true litmus test for your understanding of concepts in Deep Learning. It is not easy to implement, and the competition is going to be tough. But we guarantee you, that if you manage to complete this homework by yourself, you can confidently claim that you are now a Deep Learning Specialist!</p> <p>Good luck and enjoy the challenge!</p>"}, {"location": "cs/ai/idl/#project", "title": "Project", "text": "<p>\u6211\u4e0d\u662f\u5f88\u559c\u6b22\u8fd9\u95e8\u8bfe\u7684 Project\uff0c\u7ed9\u7684\u65f6\u95f4\u4e0d\u591f\u5145\u8db3\uff0c\u4e5f\u4e0d\u63d0\u4f9b\u989d\u5916\u7684\u8ba1\u7b97\u8d44\u6e90\uff0c\u800c\u4e14\u8fd8\u662f\u5c0f\u7ec4\u4f5c\u4e1a\uff08\u8fd9\u53ef\u80fd\u662f\u7f6a\u9b41\u7978\u9996\uff09\u3002\u8ba9\u6211\u611f\u89c9\u6709\u70b9\u5728\u6d6a\u8d39\u65f6\u95f4\u751f\u4ea7\u6240\u8c13\u7684\u79d1\u7814\u5783\u573e\uff0c\u8fd8\u4e0d\u5982 enroll 11-685 \u7248\u672c\u53bb\u505a HW5\u2014\u2014implement a LLM from scratch\u3002\u4e5f\u542c\u8bf4\u4e4b\u524d\u6709\u4eba\u9760\u7740 Project \u53d1\u4e86\u9876\u4f1a\uff0c\u4e0d\u8fc7\u5b9e\u9645\u4f53\u9a8c\u4e0b\u6765\u6211\u611f\u89c9\u8fd9\u90e8\u5206\u7684 support \u505a\u5f97\u8fd8\u4e0d\u591f\u597d\u3002</p> <p>\u867d\u7136\u6700\u540e\u5206\u6570\u4e5f\u8fd8\u53ef\u4ee5\uff0c\u4e0d\u8fc7\u4f53\u9a8c\u4e0d\u662f\u5f88\u597d\uff0c\u6240\u4ee5\u6211\u4e5f\u4e0d\u60f3\u591a\u8bf4\u4e86\uff0c\u4e5f\u8bb8\u5bf9\u5b8c\u5168\u6ca1\u6709\u63a5\u89e6\u8fc7 Deep Learning Research \u7684\u540c\u5b66\u6765\u8bf4\u8fd8\u7b97\u6709\u610f\u601d\u5427\u3002</p>"}, {"location": "cs/ai/idl/#final-words", "title": "Final Words", "text": "<p>\u6700\u540e\uff0c\u6211\u60f3\u5f15\u7528\u4e00\u4e0b Bhiksha \u5728 Piazza \u4e0a\u53d1\u7684\u4e00\u5c01\u90ae\u4ef6\uff0c\u611f\u8c22\u4ed6\u548c\u4ed6\u7684 TAs \u3002\u6211\u4eec\u505a\u7684\u4e00\u5207\uff1b\u5728\u8fd9\u95e8\u8bfe\u4e0a\uff0c\u6211\u5b66\u5230\u4e86\u5f88\u591a\uff0c\u4e5f\u5f88\u5e78\u8fd0\u8fd9\u662f\u6211\u5728 CMU \u7684\u7b2c\u4e00\u95e8\u8bfe\u3002</p> <p>Comment</p> <p>Dear All,</p> <p>Our semester has finally ended, the holidays are here, and a new year is upon us.</p> <p>I would like to thank all of you for all of the effort you have put into the course.\u00a0 I know that the course was enormously tiring for many of you. \u00a0Yet, you kept with it, some of you through illness and loss, \u00a0while also managing the rest of your equally demanding academic schedules. \u00a0Thank you!</p> <p>It is my hope that you will eventually find that it was worth it. \u00a0That a few years from now, with full hindsight, \u00a0you will look back and think it was time and effort that was well spent.</p> <p>I would also like to thank my amazing TAs, without whom the semester would not be possible. The sheer number of hours they put in each day could not ever be compensated in any manner. \u00a0Their work began in May, before the previous semester ended, and continued till yesterday, and they have had little rest in the interim.</p> <p>Over the term, they have designed and tested a dozen homeworks, held or recorded dozens of recitations, several bootcamps, a dozen hackathons, conducted over 600 office hours, fielded over 25000 posts on Piazza with an average response time of 5 minutes, designed, verified and setup weekly quizzes, tracked study groups, mentored project teams, shadowed lectures, and ensured everything went off on time, all the while also managing their own equally demanding coursework.</p> <p>I am not entirely sure why they do it, given that they get paid little to nothing for what they do. Their dedication is inspiring even to me. Thank you, guys!</p> <p>And finally, a thank you to all the unseen staff who kept the clock ticking -- the mediatech folks who broadcast the lectures, my admin Jennifer who ensured that all the organization and scheduling was in order, and the folks at Eberly and the helpdesk who help us setup various things.</p> <p>I wish you all a very happy holiday season and a wonderful new year. \u00a0May it be all good.</p> <p>-Bhiksha</p>"}, {"location": "cs/system/", "title": "\u8ba1\u7b97\u673a\u7cfb\u7edf", "text": "<p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf\u76f8\u5173\u5b66\u4e60\u8d44\u6599\u3002\u5305\u62ec\uff1a</p> <ul> <li>CMU CSAPP</li> <li>\u5357\u4eac\u5927\u5b66\u8ba1\u7b97\u673a\u7cfb\u7edf\u57fa\u7840\u5b9e\u9a8c\uff08ICS PA\uff09</li> </ul>"}, {"location": "cs/system/#table-of-contents", "title": "Table of Contents", "text": "<ul> <li>\u5357\u4eac\u5927\u5b66 ICS \u5b9e\u9a8c</li> </ul>"}, {"location": "cs/system/ics/", "title": "\u5357\u4eac\u5927\u5b66 ICS PA \u5b9e\u9a8c", "text": "<p> \u7ea6 7086 \u4e2a\u5b57  196 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 26 \u5206\u949f</p> <p>Abstract</p> <p>\u5357\u4eac\u5927\u5b66\u8ba1\u7b97\u673a\u7cfb\u7edf\u57fa\u7840\u8bfe\u7a0b\u5b9e\u9a8c\u3002</p> <p>\u5b9e\u9a8c\u6307\u5bfc\u6587\u6863\uff1ahttps://nju-projectn.github.io/ics-pa-gitbook/ics2022/</p> <p>\u4e00\u4e2a\u4e00\u76f4\u542c\u670b\u53cb\u3001\u5b66\u957f\u79f0\u8d5e\u7684\u5b9e\u9a8c\uff0c\u5bd2\u5047\u505a\u4e86\u4e00\u4e0b\uff0c\u5f88\u723d\uff0c\u4e5f\u5b66\u5230\u4e86\u4e00\u4e9b\uff0c\u8fd9\u91cc\u4f1a\u8bb0\u5f55\u4e00\u4e0b\u5b66\u5230\u7684\u96f6\u6563\u4e1c\u897f\u4ee5\u53ca\u4e00\u4e9b\u75db\u82e6 debug \u7ecf\u5386\uff08</p> <p>\u5bf9\u4e8e\u8fd9\u5957\u5b9e\u9a8c\u8fd8\u662f\u5f15\u53d1\u4e86\u6211\u7684\u4e00\u4e9b\u601d\u8003\u7684\uff0c\u76f8\u5173\u611f\u609f\u548c\u601d\u8003\u5728 blog \u4e0a\uff1a\u300c\u6742\u8c08\u300d\u7531 PA \u5b9e\u9a8c\u5f15\u53d1\u7684\u4e00\u4e9b\u601d\u8003</p>"}, {"location": "cs/system/ics/#_1", "title": "\u5b9e\u9a8c\u6982\u8ff0", "text": "<p>\u6574\u4e2a\u5b9e\u9a8c\u9010\u6b65\u5f15\u5bfc\u5b8c\u6210\u4e00\u4e2a\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u6784\u5efa\uff0c\u5305\u62ec\u5e95\u5c42\u7684 NEMU \u6a21\u62df\u5668\uff0c\u8fd0\u884c\u65f6\u73af\u5883 AbstractMachine\uff08AM\uff09\uff0c\u5728\u5176\u4e0a\u7684\u7b80\u6613\u64cd\u4f5c\u7cfb\u7edf NanOS-lite\uff0c\u4ee5\u53ca\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\u5e93 Navy-apps\u3002</p> <p>\u4e00\u5171\u5206\u4e3a 5 \u4e2a\u90e8\u5206\uff0cPA0 \u914d\u7f6e\u73af\u5883\uff0cPA1 \u5b8c\u5584 NEMU \u7684\u8c03\u8bd5\u5668\u529f\u80fd\uff0cPA2 \u6a21\u62df NEMU \u6307\u4ee4\u8fd0\u884c\u4ee5\u53ca\u8865\u5145 AM\uff0cPA3 \u5b8c\u5584 NEMU \u7684\u4e2d\u65ad/\u5f02\u5e38\u5904\u7406\u3001\u5b9e\u73b0\u64cd\u4f5c\u7cfb\u7edf\u7684\u7cfb\u7edf\u8c03\u7528\u4ee5\u53ca\u7b80\u6613\u6587\u4ef6\u7cfb\u7edf\u529f\u80fd\uff0cPA4 \u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5b9e\u73b0\u591a\u9053\u7a0b\u5e8f\u7684\u8fd0\u884c\u3001\u865a\u62df\u5185\u5b58\u7ba1\u7406\u4ee5\u53ca\u5916\u90e8\u4e2d\u65ad\u5904\u7406\u3002</p> <p>\u7ec6\u5206\u6bcf\u4e2a\u5b9e\u9a8c\u7684\u5185\u5bb9\u4ee5\u53ca\u6d89\u53ca\u5230\u7684\u6e90\u7801\u90e8\u5206\uff0c\u6211\u6574\u7406\u4e86\u5982\u4e0b\u4e00\u4e2a\u8868\u683c\u4f9b\u53c2\u8003\uff1a</p> <p> </p> <p>PS\uff1a\u5176\u4e2d AM \u7531\u4e94\u4e2a\u90e8\u5206\u7ec4\u6210\uff0cTRM\uff08\u56fe\u7075\u673a\u6a21\u62df\uff09\u7b80\u5355\u800c\u4e14\u5df2\u7ecf\u5b9e\u73b0\u597d\u4e86\uff0cIOE \u4e3a\u8f93\u5165\u8f93\u51fa\u6269\u5c55\uff0cCTE \u4e3a\u4e0a\u4e0b\u6587\u7ba1\u7406\u6269\u5c55\uff0cVME \u4e3a\u865a\u62df\u5185\u5b58\u7ba1\u7406\u6269\u5c55\uff0c\u8fd8\u6709\u4e00\u4e2a MPE\uff08\u591a\u5904\u7406\u5668\u6269\u5c55\uff09\u5728 PA \u4e2d\u4e0d\u4f7f\u7528\u3002klib \u4e3a\u7b80\u5355\u7684\u8fd0\u884c\u65f6\u5e93\uff0c\u63d0\u4f9b\u7ed9 AM \u548c\u64cd\u4f5c\u7cfb\u7edf\u4f7f\u7528\u3002</p> <p>\u603b\u800c\u8a00\u4e4b\u6709\u4e86\u8ba1\u7b97\u673a\u7cfb\u7edf\u8bfe\u4ee5\u53ca RISCV \u624b\u518c\u9605\u8bfb\u7684\u57fa\u7840\uff0c\u5927\u90e8\u5206\u5b9e\u9a8c\u8fd8\u662f\u6bd4\u8f83\u8f7b\u677e\u7684\uff0c\u6ca1\u6709\u4ec0\u4e48\u96be\u4ee5\u7406\u89e3\u7684\u5730\u65b9\u3002\u8f83\u4e3a\u75db\u82e6\u7684\u5c31\u662f debug \u65f6\u4e00\u4e9b\u5947\u602a\u7684\u95ee\u9898\u4ee5\u53ca\u6700\u540e PA4 \u4e2d\u4e4b\u524d\u6ca1\u6709\u63a5\u89e6\u8fc7\u7684\u865a\u5b58\u7ba1\u7406\u7684\u5185\u5bb9\u4e86\u3002\u540e\u9762\u8bb0\u5f55\u4e00\u4e9b\u8fd8\u80fd\u56de\u5fc6\u8d77\u6765\u7684\u95ee\u9898\uff08\u5176\u5b9e\u662f\u505a\u7684\u8fc7\u7a0b\u4e2d\u61d2\u5f97\u8bb0\u5f55\uff09\u3002</p>"}, {"location": "cs/system/ics/#pa0", "title": "PA0", "text": "<p>\u8fd9\u90e8\u5206\u5c31\u662f\u914d\u7f6e Linux \u73af\u5883\u4ee5\u53ca\u83b7\u53d6\u6e90\u7801\u3002Ubuntu \u5b89\u88c5\u5c31\u8fd8\u662f\u6b63\u5e38\uff0cUltraISO \u51c6\u5907\u542f\u52a8\u76d8\uff0c\u7136\u540e\u8fdb BIOS \u4ece U \u76d8\u542f\u52a8\uff0c\u6839\u636e\u6307\u5bfc\u5b89\u88c5\u3002\u8fd9\u6b21\u9047\u5230\u7684\u51e0\u4e2a\u8054\u60f3\u7684\u5751\uff08\u6211\u7684 win \u7535\u8111\u662f\u8054\u60f3\u5c0f\u65b0 Air 14+\uff09\uff1a</p> <ul> <li>\u8054\u60f3\u4f1a\u81ea\u52a8\u5f00\u542f BitLocker \u4fdd\u62a4\u78c1\u76d8\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b Ubuntu \u65e0\u6cd5\u5b89\u88c5\uff0c\u9700\u8981\u56de\u5230 Win \u4e2d\u5173\u6389 BitLocker\uff08\u65f6\u95f4\u8f83\u957f\uff09</li> <li>\u6211\u8fd9\u53f0\u8054\u60f3\u5f00\u673a\u4f1a\u7acb\u5373\u542f\u52a8 Windows\uff0c\u6ca1\u6709\u8054\u60f3 Logo \u9875\u9762\uff08Windows \u5f00\u673a\u754c\u9762\u7684 Windows \u88ab\u66ff\u6362\u6210\u4e86\u8054\u60f3\u5c0f\u65b0\uff0c\u8fd9\u4e0d\u7b97\u5f00\u673a logo \u7684\u90e8\u5206\uff09\uff0c\u6240\u4ee5\u8981\u5728\u6309\u4e0b\u7535\u6e90\u952e\u540e\u9a6c\u4e0a\u6309 F2 \u624d\u80fd\u8fdb\u5165 BIOS<ul> <li>\u800c\u4e14\u90a3\u4e2a FnLock \u5728\u8fd9\u4e2a\u65f6\u5019\u6709\u6ca1\u6709\u7528\u4e0d\u6e05\u695a\uff0cFn+F2 \u4e0d\u884c\u5c31\u5355\u72ec F2</li> </ul> </li> <li>\u6211\u8fd9\u53f0\u7684 BIOS \u754c\u9762\u662f\u201c\u4f18\u5316\u201d\u8fc7\u7684\uff0c\u4e0d\u662f\u8001\u5f0f\u90a3\u79cd\u84dd\u7070\u754c\u9762\uff0c\u751a\u81f3\u542f\u52a8\u9879\u91cc\u627e\u4e0d\u5230 USB\uff0c\u4e0d\u80fd\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u542f\u52a8<ul> <li>\u6b63\u786e\u64cd\u4f5c\u662f\u5728\u5173\u673a\u60c5\u51b5\u4e0b\u76f4\u63a5\u6309 F12 \u53f3\u4fa7\u7684\u201c\u4e94\u89d2\u661fS\u201d\u7279\u6b8a\u529f\u80fd\u952e\uff0c\u4fbf\u4f1a\u51fa\u73b0\u9875\u9762\u76f4\u63a5\u9009\u62e9\u8fdb\u5165 BIOS \u8fd8\u662f\u9009\u62e9\u542f\u52a8\u65b9\u5f0f\uff0c\u8fd9\u91cc\u5c31\u6709 USB \u4e86</li> </ul> </li> </ul> <p>\u5173\u4e8e Ubuntu \u7684\u914d\u7f6e\uff0c\u6211\u7684\u6d41\u7a0b\u5927\u6982\u5c31\u662f\uff1a</p> <ul> <li>\u5b89\u88c5\u4e00\u7cfb\u5217\u5b57\u4f53\uff0c\u6539\u58c1\u7eb8</li> <li>\u88c5 gnome tweaks \u8c03\u7cfb\u7edf\u5b57\u4f53\u548c\u7a97\u53e3\u4e09\u4e2a\u6309\u94ae\uff08\u5173\u95ed\u9690\u85cf\u6700\u5927\u5316\uff09\u8c03\u5230\u5de6\u4e0a\u89d2</li> <li>\u6362 zsh\uff0c\u88c5 oh-my-zsh\u3001powerlevel10k \u4e3b\u9898\u4ee5\u53ca\u63d2\u4ef6\uff0c\u6dfb\u52a0 vim \u914d\u7f6e</li> <li>\u88c5\u4e00\u4e9b\u547d\u4ee4\u884c\u5e38\u7528\u7684\u5de5\u5177</li> <li>\u88c5\u4e2d\u6587\u8f93\u5165\u6cd5</li> <li>\u88c5 V2rayN\uff0c\u5728 FireFox \u4e0a\u7528 Bing \u641c\u7d22\u5b89\u88c5 Chrome\uff0c\u5b89\u88c5 vscode\uff0c\u5e76\u540c\u6b65\u8bbe\u7f6e</li> </ul> <p>\u51e0\u4e2a Ubuntu \u4e0a\u8fd8\u6ca1\u641e\u597d\u7684\u95ee\u9898\uff1a</p> <ul> <li>\u60f3\u8981\u7981\u7528 Logi MX Master 2S \u9f20\u6807\u7684\u65e0\u9650\u6eda\u52a8\uff0c\u4f46\u6ca1\u6709 Options\uff0c\u7f51\u4f20\u7684 Solaar \u5de5\u5177\u91cc\u4e5f\u627e\u4e0d\u5230\u8fd9\u4e00\u8bbe\u7f6e</li> <li>\u60f3\u8981\u4fee\u6539 CapsLk \u7684\u884c\u4e3a\u5230\u4e0e mac \u4e00\u81f4\uff0cwin \u4e0a\u6709 AutoHotkey \u53ef\u4ee5\u7528\uff0cLinux \u4e0a\u6ca1\u627e\u5230\u597d\u7528\u7684\u66ff\u4ee3<ul> <li>\u5176\u5b9e tweaks \u91cc\u6709\u8bbe\u7f6e\u53ef\u4ee5\u66f4\u6539 CapsLk \u7684\u884c\u4e3a\uff0c\u4f46\u662f\u8c8c\u4f3c\u6ca1\u6709\u6548\u679c\uff0c\u5927\u6982\u662f\u4e2a bug\uff0c\u53ef\u4ee5\u641c\u5230\u7c7b\u4f3c bug \u4f46\u6ca1\u770b\u5230\u89e3\u51b3\u529e\u6cd5</li> </ul> </li> </ul> <p>\u53cd\u6b63\u9f13\u6363\u4e86\u534a\u5929\u5c31\u80fd\u7528\u5c31\u884c\u4e86\u3002</p>"}, {"location": "cs/system/ics/#git", "title": "\u5b9e\u9a8c\u4ee3\u7801 git \u8ddf\u8e2a", "text": "<p>\u6574\u5957\u5b9e\u9a8c\u4ee3\u7801\u6709\u4e00\u4e2a\u5f88\u6709\u8da3\u5f88\u795e\u5947\u7684\u529f\u80fd\uff0c\u5c31\u662f\u5728\u6bcf\u6b21\u7f16\u8bd1\u3001\u8fd0\u884c\u7684\u65f6\u5019\u90fd\u4f1a\u81ea\u52a8\u63d0\u4ea4\u4fee\u6539\uff0c\u5e76\u751f\u6210\u4e00\u6761 commit\u3002PA \u4e2d\u79f0\u4e4b\u4e3a\u201c\u5f00\u53d1\u8ddf\u8e2a\u201d\uff0c\u901a\u8fc7\u8fd9\u4e2a\u624b\u6bb5\u6765\u8bb0\u5f55\u5b9e\u9a8c\u6d41\u7a0b\uff0c\u5e76\u68c0\u67e5\u662f\u5426\u5b58\u5728\u4f5c\u5f0a\u884c\u4e3a\u3002</p> <p>\u8fd9\u4e00\u529f\u80fd\u7684\u5b9e\u73b0\u5f97\u76ca\u4e8e\u6574\u4e2a\u6846\u67b6\u90fd\u4f7f\u7528\u63d0\u4f9b\u597d\u7684 Makefile\uff0c\u4e14\u7f16\u8bd1\u8fd0\u884c\u90fd\u901a\u8fc7 make \u6765\u8fdb\u884c\u3002\u5176\u539f\u7406\u4e3a\uff1a</p> <ul> <li>\u6839\u76ee\u5f55\u4e0b Makefile\uff1a     <pre><code>STUID = ...\nSTUNAME = ...\n\nGITFLAGS = -q --author='tracer-ics2022 &lt;tracer@njuics.org&gt;' --no-verify --allow-empty\n\ndefine git_commit\n    -@git add $(NEMU_HOME)/.. -A --ignore-errors\n    -@while (test -e .git/index.lock); do sleep 0.1; done\n    -@(echo \"&gt; $(1)\" &amp;&amp; echo $(STUID) $(STUNAME) &amp;&amp; uname -a &amp;&amp; uptime) | git commit -F - $(GITFLAGS)\n    -@sync\nendef\n</code></pre><ul> <li>\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570 git_commit<ul> <li>add \u6240\u6709\u5185\u5bb9\uff08NEMU_HOME/.. \u5373\u4e3a\u5b9e\u9a8c\u6839\u76ee\u5f55\uff09\u5e76\u786e\u4fdd\u5b8c\u6210</li> <li>\u5c06\u53c2\u6570\u3001\u5b66\u53f7\u59d3\u540d\u3001\u7cfb\u7edf\u4fe1\u606f\u4f5c\u4e3a commit message \u8fdb\u884c commit\uff0cauthor \u5728 GITFLAGS \u4e2d\u6307\u5b9a</li> </ul> </li> </ul> </li> <li>NEMU \u7684\u76f8\u5173 Makefile\uff1a     <pre><code>-include $(NEMU_HOME)/../Makefile\n\ncompile_git: \n    $(call git_commit, \"compile NEMU\")\n$(BINARY): compile_git\n\nrun-env: $(BINARY) $(DIFF_REF_SO)\nrun: run-env\n    $(call git_commit, \"run NEMU\")\n    $(NEMU_EXEC)\ngdb: run-env\n    $(call git_commit, \"gdb NEMU\")\n    gdb -s $(BINARY) --args $(NEMU_EXEC)\n</code></pre><ul> <li>\u5bfc\u5165\u4e86\u524d\u9762\u7684 Makefile</li> <li>\u7f16\u8bd1\u65f6\u6dfb\u52a0\u4e86\u4f9d\u8d56 compile_git\uff0c\u5176\u4e2d\u4f1a\u8c03\u7528 git_commit \u51fd\u6570\u8fdb\u884c commit\uff0cmsg \u5f00\u5934\u4e3a\u53c2\u6570 compile NEMU</li> <li>\u5bf9\u4e8e run \u548c gdb\uff0c\u5728\u7f16\u8bd1\u540e\u3001\u8fd0\u884c\u524d\u8fd8\u4f1a\u591a\u52a0\u4e00\u6761 run NEMU \u6216 gdb NEMU \u7684\u7a7a commit msg \u4f5c\u4e3a\u8bb0\u5f55</li> </ul> </li> </ul> <p>\u7531\u4e8e\u5b9e\u9a8c\u4ece\u5934\u5230\u5c3e\u90fd\u8dd1\u5728 NEMU \u4e0a\uff08native \u6d4b\u8bd5\u4e0d\u7b97\uff09\uff0c\u6240\u4ee5\u6bcf\u6b21\u4fee\u6539\u3001\u8fd0\u884c\u90fd\u4f1a\u7ecf\u8fc7\u8fd9\u4e9b\u90e8\u5206\uff0c\u8fdb\u884c commit \u8bb0\u5f55\uff0c\u8fbe\u5230\u81ea\u52a8\u8ddf\u8e2a\u7684\u76ee\u7684\u3002</p>"}, {"location": "cs/system/ics/#pa1", "title": "PA1", "text": ""}, {"location": "cs/system/ics/#pa11", "title": "PA1.1", "text": "<p>PA1.1 \u5b9e\u9645\u9700\u8981\u5199\u7684\u90e8\u5206\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u8bfb\u8bfb\u6e90\u7801\u5c31\u80fd\u5199\u51fa\u6765\u3002\u5728\u8bfb\u6e90\u7801\u7684\u65f6\u5019\u53d1\u73b0\u4e86\u4e00\u4e2a\u5f88\u6709\u610f\u601d\u7684\u5e93\u51fd\u6570 getopt_long\u3002\u4e4b\u524d\u4e00\u76f4\u4ee5\u4e3a C \u8bed\u8a00\u547d\u4ee4\u884c\u53c2\u6570\u90fd\u662f\u9760\u624b\u52a8\u63d0\u53d6\u89e3\u6790\u7684\uff0c\u539f\u6765\u8fd8\u6709\u4e00\u4e2a\u4e13\u95e8\u7684\u5e93\u51fd\u6570\u7528\u6765\u5e72\u8fd9\u4e2a\uff0c\u5927\u6982\u4f7f\u7528\u65b9\u5f0f\u5c31\u662f\uff1a <pre><code>#include &lt;getopt.h&gt;\nstatic int parse_args(int argc, char *argv[]) {\n    const struct option table[] = {\n        {\"batch\", no_argument      , NULL, 'b'},\n        {\"log\"  , required_argument, NULL, 'l'},\n        {\"help\" , no_argument      , NULL, 'h'},\n        {0      , 0                , NULL,  0 }.\n    };\n    int o;\n    while ((o = getopt_long(argc, argv, \"-bhl:\", table, NULL)) != -1) { // l \u540e\u5192\u53f7\u8868\u793a\u540e\u9762\u9700\u8981\u53c2\u6570\n        switch (o) {\n            case 'b': ...; break;\n            case 'l': log_file = optarg; break; // optarg \u4e3a\u7b49\u53f7\u540e\u7684\u5b57\u7b26\u4e32\n            case 1: ...; break; // \u76f4\u63a5\u4f20\u5165\u7684\u53c2\u6570\uff0c\u4e0d\u662f\u9009\u9879\n            default:\n                // print help message\n                exit(0);\n        }\n    }\n    return 0;\n}\n</code></pre></p> <p>\u5269\u4e0b\u7684 PA1 \u597d\u50cf\u4e5f\u6ca1\u4ec0\u4e48\u597d\u8bb0\u7684\u4e86\u3002\u8868\u8fbe\u5f0f\u6c42\u503c\u548c\u76d1\u89c6\u70b9\u90fd\u8fd8\u7b97\u597d\u5199\u3002</p>"}, {"location": "cs/system/ics/#pa2", "title": "PA2", "text": ""}, {"location": "cs/system/ics/#pa21", "title": "PA2.1", "text": "<p>\u8fd9\u90e8\u5206\u662f\u5b8c\u5584 NEMU \u7684\u8bd1\u7801\u3001\u6267\u884c\u8fc7\u7a0b\u3002\u8fd9\u4e2a\u90e8\u5206\u5728 ics2022 \u7248\u7684 PA \u4e2d\u5199\u7684\u5f88\u795e\u5947\uff0c\u8ba9 riscv \u7684\u8bd1\u7801\u5199\u8d77\u6765\u66f4\u6e05\u6670\u7b80\u6d01\u3002\u5177\u4f53\u6765\u8bf4\u90fd\u662f\u901a\u8fc7\u5b8f\u6765\u5b9e\u73b0\u7684\u3002</p> <p>\u5177\u4f53\u6765\u8bb2\u5c31\u662f\u5b9a\u4e49\u4e86\u8fd9\u4e48\u51e0\u4e2a\u5b8f/\u51fd\u6570\uff1a <pre><code>__attribute__((always_inline))\nstatic inline void pattern_decode(const char *str, int len,\n    uint64_t *key, uint64_t *mask, uint64_t *shift) {\n  ... // \u4ece str \u4e2d\u89e3\u6790\u51fa key, mask, shift\n      // \u5bf9\u5e94\u4f4d\u5982\u679c\u662f 1 \u5219 key \u8be5\u4f4d\u4e3a 1\uff0c\u5982\u679c\u662f ? \u5219 mask \u8be5\u4f4d\u4e3a 0\n      // \u6700\u7ec8\u6548\u679c\u4e3a\u5339\u914d\u4e0a\u7684\u6307\u4ee4 (inst &gt;&gt; shift) &amp; mask == key\n}\n#define INSTPAT_START(name) { const void ** __instpat_end = &amp;&amp;concat(__instpat_end_, name); \n#define INSTPAT_END(name) concat(__instpat_end_, name): ; }\n#define INSTPAT_INST(s) ((s)-&gt;isa.instr.val)\n#define INSTPAT_MATCH(s, name, type, ... /* execute body */) { \\\n    decode_operand(s, &amp;dest, &amp;src1, &amp;src2, &amp;imm, concat(TYPE_, type)); \\\n    __VA_ARGS__; \\\n}\n#define INSTPAT(pattern, ...) do { \\\n    uint64_t key, mask, shift; \\\n    pattern_decode(pattern, STRLEN(pattern), &amp;key, &amp;mask, &amp;shift); \\\n    if ((((uint64_t)INSTPAT_INST(s) &gt;&gt; shift) &amp; mask) == key) { \\\n        INSTPAT_MATCH(s, ##__VA_ARGS__); \\\n        goto *(__instpat_end); \\\n    } \\\n} while (0)\n</code></pre></p> <p>\u7136\u540e\u662f\u4e24\u4e2a\u51fd\u6570\uff0c\u4e00\u4e2a\u7528\u6765\u6839\u636e\u7c7b\u578b\u89e3\u7801\u64cd\u4f5c\u6570\uff0c\u4e00\u4e2a\u7528\u6765\u89e3\u7801\u6307\u4ee4\uff08\u5305\u62ec\u8bd1\u7801\u548c\u6267\u884c\uff09\uff1a</p> <pre><code>static void decode_operand(Decode *s, int *dest, word_t *src1, word_t *src2, word_t *imm, int type) {\n    uint32_t i = s-&gt;isa.instr.val;\n    int rd  = BITS(i, 11, 7);\n    int rs1 = BITS(i, 19, 15);\n    int rs2 = BITS(i, 24, 20);\n    *dest = rd;\n    switch (type) {\n        case TYPE_I: src1R();          immI(); break;\n        case TYPE_U:                   immU(); break;\n        case TYPE_S: src1R(); src2R(); immS(); break;\n        case TYPE_R: src1R(); src2R();         break;\n        case TYPE_B: src1R(); src2R(); immB(); break;\n        case TYPE_J:                   immJ(); break;\n    }\n}\n\nstatic int decode_exec(Decode *s) {\n    int dest = 0;\n    word_t src1 = 0, src2 = 0, imm = 0;\n    s-&gt;dnpc = s-&gt;snpc;\n    INSTPAT_START();\n    INSTPAT(\"0000000 ????? ????? 000 ????? 01100 11\", add, R, Reg(dest) = src1 + src2);\n    ...\n    INSTPAT_END();\n    Reg(0) = 0;\n    return 0;\n}\n</code></pre> <ul> <li>INSTPAT_START \u548c INSTPAT_END \u4e24\u4e2a\u5b8f\u6784\u6210\u4e86\u4e00\u7ec4\u5927\u62ec\u53f7\uff0c\u5728\u672b\u5c3e\u521b\u5efa\u4e86\u4e00\u4e2a\u6807\u53f7\uff0c\u5e76\u5728\u5f00\u5934\u83b7\u53d6\u4e86\u5176\u5730\u5740</li> <li>INSTPAT \u5b8f\u5c55\u5f00\u540e\u9996\u5148\u901a\u8fc7 pattern_decode \u83b7\u53d6 key mask shift\uff0c\u7136\u540e\u901a\u8fc7 INSTPAT_INST \u83b7\u53d6\u6307\u4ee4\u503c\u5e76\u68c0\u6d4b\u662f\u5426\u5339\u914d</li> <li>\u5982\u679c\u5339\u914d\u5219\u8fdb\u5165 INSTPAT_MATCH \u5b8f\u4e2d\uff0c\u7136\u540e goto \u5230\u7ed3\u5c3e\u6807\u53f7\u7ed3\u675f\u5f53\u524d\u6307\u4ee4<ul> <li>INSTPAT_MATCH \u5b8f\u4e2d\u9996\u5148\u8c03\u7528 decode_operand \u51fd\u6570\uff0c\u6839\u636e\u4f20\u5165\u7684\u6307\u4ee4\u7c7b\u578b\u63d0\u53d6\u5bf9\u5e94\u7684\u64cd\u4f5c\u6570\u5230 decode_exec \u7684\u5c40\u90e8\u53d8\u91cf\u4e2d</li> <li>\u7136\u540e __VA_ARGS__ \u5c06\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u5c55\u5f00\u5e76\u6267\u884c\uff0c\u4e5f\u5c31\u662f\u6307\u4ee4\u7684\u6267\u884c\u90e8\u5206</li> <li>\u901a\u8fc7 Reg \u5b8f\u5373\u53ef\u8bbf\u95ee\u8bfb\u5199\u5bc4\u5b58\u5668</li> </ul> </li> </ul> <p>\u6574\u4f53\u770b\u6765\u8fd9\u4e2a\u8bbe\u8ba1\u662f\u975e\u5e38\u5de7\u5999\u7684\uff0c\u867d\u7136\u5b8f\u770b\u8d77\u6765\u6bd4\u8f83\u590d\u6742\u96be\u61c2\uff0c\u4f46\u6700\u7ec8\u5b9e\u9645\u4e0a\u8981\u52a0\u7684\u5c31\u662f\u9488\u5bf9\u6bcf\u4e00\u79cd\u6307\u4ee4\u589e\u52a0 INSTPAT \u4e00\u884c\u7684\u5185\u5bb9\uff0c\u800c\u4e14\u6307\u4ee4\u540d\u3001\u7c7b\u578b\u3001\u4f5c\u7528\u90fd\u6e05\u6670\u7684\u4f53\u73b0\u5728\u4e00\u884c\u8bed\u53e5\u4e2d\u4e86\u3002\u7f3a\u70b9\u5927\u6982\u662f\u4e00\u6761\u6307\u4ee4\u6709\u591a\u79cd\u6548\u679c\u7684\u65f6\u5019\uff08\u4f8b\u5982 ecall mret csr \u6307\u4ee4\u7b49\uff09\u6324\u5728\u4e00\u8d77\u770b\u8d77\u6765\u4e0d\u592a\u4f18\u7f8e\uff08</p> <p>\u6709\u4e86\u4e4b\u524d\u7cfb\u7edf\u5b9e\u9a8c\u65f6\u8bfb RISC-V \u7684\u57fa\u7840\uff0c\u5bf9\u7740 RISC-V \u975e\u7279\u6743\u7ea7 ISA \u9875\u9762\u4e00\u6761\u6761\u6307\u4ee4\u6284\u5728\u91cc\u9762\u5c31\u53ef\u4ee5\u4e86\u3002\u5b9e\u9645\u8fd0\u884c\u8d77\u6765\u624d\u53d1\u73b0\u8fd8\u6709 RV32M \u7684\u6269\u5c55\uff0c\u51e0\u4e2a\u6307\u4ee4\u4e5f\u9700\u8981\u5b9e\u73b0\u4e00\u4e0b\uff0c\u540e\u7eed\u518d\u8865\u5145\u5230\u90a3\u4e2a\u9875\u9762\u3002</p> <p>\u8fd9\u90e8\u5206\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\u5c31\u662f\u5173\u4e8e\u51e0\u4e2a M \u6269\u5c55\u6307\u4ee4\u7684\u64cd\u4f5c\u6570\u7c7b\u578b\u5f3a\u8f6c\u3001\u6ea2\u51fa\u3001\u9664\u96f6\u5904\u7406\u7b49\u4e86\u3002</p>"}, {"location": "cs/system/ics/#pa22", "title": "PA2.2", "text": "<p>PA2.2 \u524d\u534a\u90e8\u5206\u5728\u5b9e\u73b0\u4e00\u4e9b\u5e93\u51fd\u6570\u5185\u5bb9\uff0c\u5305\u62ec string.h \u7684\u4e00\u4e9b\u51fd\u6570\uff08\u5b9e\u73b0 memcpy \u7684\u65f6\u5019\u51fa\u73b0\u4e86\u4e00\u4e2a\u6f5c\u5728 bug\uff0c\u540e\u9762 PA3.3 \u518d\u8bf4\uff09\uff0c\u4ee5\u53ca stdio.h \u7684 sprintf \u51fd\u6570\uff0c\u540e\u9762 PA2.3 \u7ed3\u5408\u4e32\u53e3\u8bbe\u5907\u5b9e\u73b0 printf \u51fd\u6570\uff0c\u8fd9\u91cc\u662f PA \u4ee5\u6765\u7b2c\u4e00\u6b21\u75db\u82e6\u8c03\u8bd5\uff0c\u653e\u5728\u540e\u9762\u5199\u3002</p> <p>\u9664\u4e86\u8fd9\u4e9b\uff0c\u540e\u534a\u90e8\u5206\u5b9e\u73b0\u5404\u79cd trace \u4e5f\u6ca1\u4ec0\u4e48\u96be\u5ea6\uff0c\u8fd9\u91cc\u6211\u628a\u5b83\u4eec\u90fd\u7406\u89e3\u4e3a\u4e86\u901a\u8fc7 sdb \u547d\u4ee4\u8f93\u51fa trace\uff0c\u5b9e\u9645\u4e0a\u76f4\u63a5 Log \u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u65b9\u5f0f\uff0c\u4e0d\u9700\u8981\u641e\u90a3\u4e48\u590d\u6742\u3002\u7136\u540e\u5c31\u662f difftest\u3002</p> <p>\u539f\u5148\u542c\u5230 difftest \u6211\u8fd8\u4ee5\u4e3a\u662f\u4ec0\u4e48\u9ad8\u6df1\u7684\u6280\u672f\uff0c\u4ed4\u7ec6\u4e00\u770b\u539f\u6765\u5c31\u662f\u201c\u5bf9\u62cd\u201d\uff0c\u7528\u81ea\u5df1\u5b9e\u73b0\u7684 NEMU \u548c\u66f4\u51c6\u786e\u7684 Spike \u5728\u6bcf\u6761\u6307\u4ee4\u8fd0\u884c\u540e\u5bf9\u5bc4\u5b58\u5668\u7684\u503c\u8fdb\u884c\u5bf9\u6bd4\uff0c\u786e\u4fdd\u6307\u4ee4\u7684\u6267\u884c\u6ca1\u6709\u9519\u8bef\u3002\u770b\u4e00\u770b\u6e90\u7801\u5176\u5b9e\u4e5f\u662f\u5f88\u6e05\u6670\u7684\u3002\u5728\u8c03\u8bd5\u7684\u65f6\u5019\u4e5f\u4e00\u76f4\u5f00\u7740 difftest\uff0c\u6ca1\u51fa\u73b0\u8fc7\u4ec0\u4e48\u95ee\u9898\uff0c\u76f4\u5230\u540e\u9762\u52a0\u4e0a\u5f02\u5e38\u5904\u7406\u4e4b\u540e\u5e2e\u6211\u6355\u6349\u5230\u4e86\u51e0\u4e2a\u989d\u5916\u7684\u5f02\u5e38\uff0c\u540e\u9762\u518d\u8bf4\u3002</p>"}, {"location": "cs/system/ics/#pa23", "title": "PA2.3", "text": "<p>RISC-V \u901a\u8fc7 MMIO \u6765\u5b9e\u73b0\u8bbe\u5907\u901a\u4fe1\u3002\u539f\u7406\u5927\u6982\u5c31\u662f NEMU \u4e2d\u5404\u4e2a\u8bbe\u5907\u5206\u522b\u521b\u5efa\u4e00\u4e9b\u7a7a\u95f4\uff0c\u7136\u540e\u5c06\u8fd9\u4e9b\u7a7a\u95f4\u6620\u5c04\u5230\u6307\u5b9a\u7684\u5730\u5740\u4e0a\uff0c\u5e76\u4e14\u6ce8\u518c\u4e00\u4e2a callback \u51fd\u6570\u3002\u5728\u8bbf\u5b58\u7684\u65f6\u5019\u5982\u679c\u5730\u5740\u4e0d\u843d\u5728\u7269\u7406\u5730\u5740\u8303\u56f4\u5185\uff0c\u5219\u5c1d\u8bd5\u641c\u7d22\u5730\u5740\u662f\u5426\u5728\u67d0\u4e00\u4e2a\u8bbe\u5907\u6620\u5c04\u7684\u7a7a\u95f4\u4e2d\uff0c\u5982\u679c\u662f\u7684\u8bdd\uff0c\u5bf9\u4e8e\u8bfb\u53d6\u5148\u8c03\u7528 callback\uff0c\u8fd9\u65f6\u53ef\u4ee5\u5728\u5b9e\u9645\u8bfb\u53d6\u6570\u636e\u4e4b\u524d\u66f4\u65b0\u503c\uff0c\u5bf9\u4e8e\u5199\u5165\u5219\u5199\u5165\u540e\u8c03\u7528 callback \u51fd\u6570\u5904\u7406\u65b0\u7684\u503c\u3002</p>"}, {"location": "cs/system/ics/#_2", "title": "\u4e32\u53e3", "text": "<p>\u5bf9\u4e8e\u4e32\u53e3\uff0c\u76f8\u5e94\u4ee3\u7801\u5df2\u7ecf\u63d0\u4f9b\u597d\u4e86\uff0ccallback \u51fd\u6570\u4f1a\u8981\u6c42\u4e00\u5b9a\u662f\u5199\u5165\uff0c\u4e14\u5199\u5165\u7684\u957f\u5ea6\u4e00\u5b9a\u662f\u4e00\u4e2a\u5b57\u8282\u3002\u63a5\u6536\u5230\u4e00\u4e2a\u5b57\u8282\u540e\u5219\u901a\u8fc7 putch \u6765\u8f93\u51fa\u3002\u5728 AM \u4e2d\uff0cTRM \u90e8\u5206\u5c31\u63d0\u4f9b\u4e86 putch \u51fd\u6570\uff0c\u51fd\u6570\u4f53\u5c31\u53ea\u6709 <code>outb(SERIAL_PORT, ch);</code> \u6765\u5411\u4e32\u53e3\u5730\u5740\u5199\u5165\u5b57\u8282\u8fdb\u884c\u8f93\u51fa\u3002</p> <p>\u6839\u636e\u8fd9\u4e2a\u529f\u80fd\u5c31\u53ef\u4ee5\u5b9e\u73b0 printf \u4e86\u3002\u7531\u4e8e printf\u3001sprintf \u5de5\u4f5c\u539f\u7406\u90fd\u7c7b\u4f3c\uff0c\u533a\u522b\u5728\u4e8e\u8f93\u51fa\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u5171\u7528\u7684\u90e8\u5206\u63d0\u53d6\u51fa\u5355\u4e2a\u51fd\u6570 vprintf\uff0c\u5e76\u4e14\u63a5\u6536\u4e00\u4e2a\u51fd\u6570\u7528\u6765\u8f93\u51fa\u5355\u4e2a\u5b57\u7b26\u3002\u7531\u4e8e printf \u53c2\u6570\u4e0d\u56fa\u5b9a\uff0c\u6240\u4ee5\u5c31\u9700\u8981\u4f7f\u7528 va_ \u76f8\u5173\u7684\u529f\u80fd\u4e86\u3002printf \u548c sprintf \u672c\u8eab\u5c31\u662f\u63a5\u6536\u4e00\u4e0b\u53c2\u6570\u7136\u540e\u4f20\u7ed9 vprintf\uff08\u5728\u7cfb\u7edf\u5b9e\u9a8c\u91cc\u5b66\u6765\u7684\uff09\uff0c\u6240\u4ee5\u5b83\u4eec\u4e24\u4e2a\u5199\u8d77\u6765\u5c31\u662f\uff1a <pre><code>int printf(const char *fmt, ...) {\n    int res = 0;\n    va_list ap;\n    va_start(ap, fmt);\n    res = vprintf(putch, fmt, ap);\n    va_end(ap);\n    return res;\n}\n\nstatic char *__out;\nvoid sputch(char ch) { *__out++ = ch; }\n\nint sprintf(char *out, const char *fmt, ...) {\n    int res = 0;\n    va_list ap;\n    va_start(ap, fmt);\n    __out = out;\n    res = vprintf(sputch, fmt, ap);\n    *__out = '\\0';\n    va_end(ap);\n    return res;\n}\n</code></pre></p> <p>\u4e3b\u8981\u7684\u5904\u7406\u90fd\u5728 vprintf \u4e2d\u3002\u5f53\u65f6\u6211\u5c31\u76f4\u63a5\u6284\u7cfb\u7edf\u4e8c\u7ed9\u7684 printf \u4ee3\u7801\u4e86\uff0c\u6ca1\u60f3\u5230\u88ab\u5751\u7684\u8d85\u60e8\uff0c\u5168\u662f bug\u3002\u4e0d\u8fc7\u4e3b\u4f53\u6ca1\u4ec0\u4e48\u95ee\u9898\uff1a <pre><code>int vprintf(void (*putch)(char), const char *fmt, va_list ap) {\n    int in_format = 0, longarg = 0; size_t pos = 0;\n    for ( ; *fmt; ++fmt) {\n        if (in_format) {\n            switch (*fmt) {\n                case 'x': ...\n                ...\n            }\n        } else if (*fmt == '%') {\n            in_format = 1;\n        } else {\n            putch(*fmt); pos++;\n        }\n    }\n    return pos;\n}\n</code></pre> \u5f53\u65f6\u5199\u5b8c\u4e4b\u540e\u8dd1\u8d77\u6765\u6ca1\u5565\u95ee\u9898\uff0c\u4f46\u662f\u540e\u6765\u5199\u65f6\u949f\u7684\u65f6\u5019\u53d1\u73b0\u4e86\u4e24\u4e2a\u95ee\u9898\uff1a</p> <ol> <li>\u5bf9\u4e8e 64 \u4f4d\u6570\uff0c\u8f93\u51fa\u7684\u7ed3\u679c\u5e76\u4e0d\u6b63\u786e\uff0c\u5f88\u4e71\uff0c\u5dee\u522b\u5f88\u5927</li> <li>\u5bf9\u4e8e\u65e0\u7b26\u53f7\u6570\uff0c\u8f93\u51fa\u4e71\u4e03\u516b\u7cdf\uff0c\u751a\u81f3\u4f1a\u8f93\u51fa .)/( \u8fd9\u79cd\u4e00\u5806\u4e71\u7cdf\u7684\u5b57\u7b26</li> </ol> <p>\u91cd\u65b0\u5ba1\u89c6\u4e86\u4e00\u904d\u7cfb\u7edf\u4e8c\u7684\u4ee3\u7801\uff0c\u53d1\u73b0\u5373\u4f7f\u662f\u65e0\u7b26\u53f7\u8f93\u51fa\uff0c\u867d\u7136 va_arg \u83b7\u53d6\u53c2\u6570\u7684\u65f6\u5019\u90fd\u5199\u4e86 unsigned\uff0c\u4f46\u6700\u540e\u5faa\u73af\u8ba1\u7b97\u8f93\u51fa\u4f4d\u7684\u65f6\u5019\u4e2d\u95f4\u53d8\u91cf\u4ecd\u7136\u90fd\u662f signed \u7684\uff0c\u6539\u8fc7\u6765\u540e\u8f93\u51fa\u4e0d\u4e71\u5957\u4e86\uff0c\u4f46\u662f 64 \u4f4d\u8f93\u51fa\u4ecd\u7136\u6709\u95ee\u9898\u3002</p> <p>\u6211\u751a\u81f3\u8fd8\u770b\u4e86\u6c47\u7f16\u4ee3\u7801\uff0c\u53d1\u73b0\u4e86\u4e00\u4e9b\u8be1\u5f02\u7684\u4e8b\u60c5\uff0c\u5c31\u662f\u6b63\u5e38\u6765\u8bb2\u51fd\u6570\u7684\u53c2\u6570\u4f1a\u4f9d\u6b21\u653e\u5165 a0 a1 a2 ... \u5bc4\u5b58\u5668\u4e2d\uff0c\u4f46\u662f\u5bf9\u4e8e 64 \u4f4d\u6570\u636e\uff0c\u4f1a\u8df3\u8fc7 a1 \u653e\u5165 a2 \u548c a3 \u4e2d\uff0c\u4f8b\u5982\uff1a</p> <pre><code>printf(\"%d %d\", 123, 456);\n    a0 -&gt; address of \"%d %d\"\n    a1 -&gt; 123\n    a2 -&gt; 456\n\nprintf(\"%lld\", 0x1234567890);\n    a0 -&gt; address of \"%lld\"\n    a2 -&gt; 0x34567890\n    a3 -&gt; 0x12\n</code></pre> <p>\u6211\u4e00\u5ea6\u4ee5\u4e3a\u8fd9\u662f\u7f16\u8bd1\u5668\u9519\u4e86\uff0c\u4f46\u5373\u4f7f\u662f riscv \u7684 gcc \u53c8\u600e\u4e48\u4f1a\u51fa\u8fd9\u79cd\u9519\u8bef\u5462\u3002\u5728\u7ea0\u7ed3\u751a\u81f3\u6253\u7b97\u653e\u5f03\u7684\u65f6\u5019\u6211\u53c8\u5230 Compiler Explorer \u4e0a\u8bd5\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u786e\u5b9e\u5c31\u662f\u8fd9\u6837\u7f16\u8bd1\u7684\uff0c\u5f88\u795e\u5947\u3002\u6240\u4ee5\u95ee\u9898\u80af\u5b9a\u8fd8\u662f\u51fa\u73b0\u5728 vprintf \u5185\u90e8\u4e86\u3002</p> <p>\u4e07\u6076\u4e4b\u6e90\u662f vsc \u5c06 uint64_t \u63d0\u793a\u6210\u4e86\u7531 unsigned long typedef \u800c\u6765\u7684\uff0c\u6240\u4ee5\u6211\u5c31\u7406\u6240\u5e94\u5f53\u7684\u8ba4\u4e3a\u7528 va_arg \u83b7\u53d6\u4e00\u4e2a 64 \u4f4d\u6570\u7684\u65f6\u5019\u4f7f\u7528 va_arg(ap, long) \u662f\u6b63\u786e\u7684\uff0c\u7cfb\u7edf\u4e8c\u4e5f\u662f\u8fd9\u6837\u5199\u7684\u3002\u800c\u95ee\u9898\u5c31\u5728\u4e8e vsc \u63d0\u793a\u7684\u6765\u6e90\u662f x86 \u7684 gcc \u5185\u90e8\u7684\uff0c\u800c\u4e0d\u662f riscv \u7684\u3002printf \u8f93\u51fa\u4e00\u4e0b long \u7684\u5927\u5c0f\u7684\u8bdd\u53ef\u4ee5\u53d1\u73b0\u4e5f\u662f\u56db\u4e2a\u5b57\u8282\u2026\u2026\u6240\u4ee5\u5728\u7528\u5230 64 \u4f4d\u6570\u7684\u65f6\u5019\u660e\u786e\u7684\u5199\u51fa int64_t \u6216 uint64_t \u5c31\u597d\u4e86\u3002</p>"}, {"location": "cs/system/ics/#_3", "title": "\u65f6\u949f", "text": "<p>\u65f6\u949f\u5176\u5b9e\u5199\u8d77\u6765\u95ee\u9898\u4e0d\u5927\u7684\uff0c\u4e0d\u8fc7\u505a\u65f6\u949f\u7684\u65f6\u5019\u6b63\u662f\u9700\u8981 printf 64 \u4f4d\u65e0\u7b26\u53f7\u6570\u7684\u65f6\u5019\uff0c\u8fd9\u65f6\u53d1\u73b0\u4e86\u4e0a\u9762\u8bf4\u5230\u7684 printf \u7684 bug\uff0c\u8c03\u8d77\u6765\u5c31\u76f8\u5f53\u75db\u82e6\u4e86\u3002</p> <p>\u901a\u8fc7\u9605\u8bfb\u6e90\u7801\u53d1\u73b0\uff0cNEMU \u91cc timer \u7684 callback \u51fd\u6570\u53ea\u6709\u5728 offset == 4 \u4e5f\u5c31\u662f\u8bfb\u53d6\u9ad8 32 \u4f4d\u7684\u65f6\u5019\u4f1a\u5237\u65b0\u65f6\u95f4\uff0c\u6240\u4ee5\u4e0d\u66f4\u6539\u8fd9\u91cc\u7684\u8bdd\u5c31\u9700\u8981\u5148\u8bfb\u53d6\u9ad8 32 \u4f4d\u518d\u8bfb\u53d6\u4f4e 32 \u4f4d\uff0c\u7136\u540e\u5408\u5e76\u5f97\u5230 64 \u4f4d\u65f6\u95f4\u6233\u3002</p> <p>\u5927\u6982 PA2 \u9700\u8981\u6ce8\u610f\u7684\u5c31\u8fd9\u4e9b\u4e86\uff0c\u540e\u9762\u952e\u76d8\u3001VGA \u90fd\u8fd8\u597d\u5b9e\u73b0\uff0c\u4e5f\u6ca1\u51fa\u5565\u95ee\u9898\u3002</p>"}, {"location": "cs/system/ics/#pa3", "title": "PA3", "text": ""}, {"location": "cs/system/ics/#pa31", "title": "PA3.1", "text": "<p>PA3.1 \u9700\u8981\u5b8c\u6210\u5f02\u5e38\u5904\u7406\uff0c\u5b9e\u73b0\u7279\u6743\u6307\u4ee4\u548c\u4e00\u5806 csr \u6307\u4ee4\u3002\u4ee5\u53ca\u540e\u9762\u5f02\u5e38\u4e8b\u4ef6\u7684\u5206\u53d1\uff0c\u4e0a\u4e0b\u6587\u7684\u4fdd\u5b58\u548c\u6062\u590d\uff0c\u8fd9\u5012\u662f\u90fd\u86ee\u7b80\u5355\uff0c\u6ca1\u5565\u53ef\u8bb0\u7684\u3002</p> <p>CSR \u6307\u4ee4\u90fd\u8fd8\u597d\u529e\uff0c\u867d\u7136 verilog \u7f16\u5199\u786c\u4ef6\u7684\u65f6\u5019\u75db\u82e6\u9762\u5177\uff0c\u4f46\u662f\u8fd9\u91cc\u5c31\u5f88\u6e05\u6670\u4e86\uff0c\u76f4\u63a5\u5199\u4e00\u4e2a\u8bfb\u4e00\u4e2a\u5199\u5c31\u597d\uff0c\u800c\u4e14\u53ef\u4ee5\u5c06\u6240\u6709 csr \u6307\u4ee4\u90fd\u5f53\u4f5c I \u578b\uff0c\u8fd9\u6837\u89e3\u6790\u51fa\u7684\u7acb\u5373\u6570\u5c31\u662f csr \u5bc4\u5b58\u5668\u7f16\u53f7\u4e86\u3002</p> <p>ecall \u548c mret \u7684\u8bdd\u5c31\u6709\u4e00\u70b9\u5934\u75bc\u4e86\uff0c\u867d\u7136\u8868\u9762\u4e0a\u505a\u7684\u5c31\u662f\u8df3\u8f6c\u5230 mtvec \u6216\u8005 mepc \u4f4d\u7f6e\uff0c\u4f46\u662f\u4e3a\u4e86\u4f7f difftest \u901a\u8fc7\u8fd8\u9700\u8981\u6309\u7167\u8981\u6c42\u4fee\u6539 mstatus \u7684\u503c\u3002\u5728 RISC-V \u7279\u6743\u7ea7 ISA \u7684\u6700\u540e\u6211\u68b3\u7406\u4e86\u5f02\u5e38\u5904\u7406\u7684\u6d41\u7a0b\uff0c\u5305\u62ec\u4e86 ecall \u548c mret \u671f\u95f4\u7684\u5168\u90e8\u6548\u679c\uff1a</p> <p>ecall \u548c mret \u6548\u679c</p> <p>ecall \u65f6\uff1a</p> <ul> <li>\u5c06\u53d1\u751f\u5f02\u5e38\u7684\u6307\u4ee4\u5730\u5740\u4fdd\u5b58\u5230 mepc \u5bc4\u5b58\u5668</li> <li>\u5c06\u4e2d\u65ad\u7c7b\u578b\u7801\u4fdd\u5b58\u5230 mcause \u5bc4\u5b58\u5668\uff0811 \u8868\u793a\u4ece M \u6a21\u5f0f\u53d1\u51fa\u7684 ecall\uff09</li> <li>\u5982\u679c\u4e2d\u65ad\u5e26\u6709\u9644\u52a0\u4fe1\u606f\uff0c\u5c06\u5176\u4fdd\u5b58\u5230 mtval \u5bc4\u5b58\u5668\uff08\u8fd9\u91cc\u5ffd\u7565\uff09</li> <li>\u5982\u679c\u662f\u5916\u90e8\u5f15\u53d1\u7684\u4e2d\u65ad\uff0c\u4ee4 mstatus[MPIE] = mstatus[MIE]\uff08\u4fdd\u5b58\uff09\uff0c\u7136\u540e\u4ee4 mstatus[MIE] = 0\uff08\u5173\u95ed\u4e2d\u65ad\uff09</li> <li>\u5c06\u5f53\u524d\u7279\u6743\u6a21\u5f0f\u4fdd\u5b58\u5230 mstatus[MPP] \u4e2d</li> <li>\u5c06\u5f53\u524d\u7279\u6743\u6a21\u5f0f\u8bbe\u7f6e\u4e3a Machine \u6a21\u5f0f</li> <li>\u6839\u636e mtvec \u5bc4\u5b58\u5668\u7684\u8bbe\u7f6e\uff0c\u8df3\u8f6c\u5230\u5bf9\u5e94\u4e2d\u65ad\u54cd\u5e94\u7a0b\u5e8f</li> </ul> <p>mret \u65f6\uff1a</p> <ul> <li>\u4ee4 mstatus[MIE] = mstatus[MPIE]\uff08\u6062\u590d\uff09\uff0c\u7136\u540e\u4ee4 mstatus[MPIE] = 1</li> <li>\u5c06\u5f53\u524d\u7279\u6743\u6a21\u5f0f\u8bbe\u7f6e\u4e3a mstatus[MPP] \u4e2d\u4fdd\u5b58\u7684\u503c</li> <li>\u5c06 mstatus[MPP] \u8bbe\u7f6e\u4e3a U \u6a21\u5f0f</li> <li>\u5c06 pc \u503c\u8bbe\u7f6e\u4e3a mepc \u503c\uff0c\u5373\u8df3\u8f6c\u56de\u4e2d\u65ad\u524d\u7684\u7a0b\u5e8f</li> </ul> <p>\u7531\u4e8e mstatus \u5bc4\u5b58\u5668\u6bcf\u4e00\u4f4d\u6709\u81ea\u5df1\u7684\u4f5c\u7528\uff0c\u6240\u4ee5\u4f7f\u7528 union \u662f\u4e00\u4e2a\u65b9\u4fbf\u7684\u9009\u62e9\uff08\u5176\u5b9e\u5230 PA4 \u6211\u624d\u8f6c\u5230 union\uff0c\u4e4b\u524d\u90fd\u662f\u4f4d\u64cd\u4f5c\uff09\uff1a <pre><code>union {\n    struct {\n        uint32_t UIE: 1, SIE: 1, WPRI_0: 1, MIE: 1;\n        uint32_t UPIE: 1, SPIE: 1, WPRI: 1, MPIE: 1;\n        uint32_t SPP: 1, WPRI_1_2: 2, MPP: 2, FS: 2;\n        uint32_t XS: 2, MPRV: 1, SUM: 1, MXR: 1;\n        uint32_t TVM: 1, TW: 1, TSR: 1, WPRI_3_10: 8, SD: 1;\n    } part;\n    word_t val;\n} mstatus;\n</code></pre></p> <p>\u6240\u4ee5\u5728 ecall \u65f6\u505a\u7684\u64cd\u4f5c\u5c31\u662f\uff1a <pre><code>if (cpu.priv == 3) s-&gt;dnpc = isa_raise_intr(11, s-&gt;pc);\nelse if (cpu.priv == 0) s-&gt;dnpc = isa_raise_intr(8, s-&gt;pc);\nelse assert(0);\n// \u5176\u4e2d\nword_t isa_raise_intr(word_t NO, vaddr_t epc) {\n    cpu.mepc = epc;\n    cpu.mcause = NO;\n    cpu.mstatus.part.MPP = cpu.priv;\n    cpu.priv = 3;\n    cpu.mstatus.part.MPIE = cpu.mstatus.part.MIE;\n    cpu.mstatus.part.MIE = 0;\n    return cpu.mtvec;\n}\n</code></pre> \u5728 mret \u65f6\u505a\u7684\u64cd\u4f5c\uff1a <pre><code>s-&gt;dnpc = cpu.mepc;\ncpu.mstatus.part.MIE = cpu.mstatus.part.MPIE;\ncpu.mstatus.part.MPIE = 1;\ncpu.priv = cpu.mstatus.part.MPP;\ncpu.mstatus.part.MPP = 0;\n</code></pre></p>"}, {"location": "cs/system/ics/#pa32", "title": "PA3.2", "text": "<p>\u8fd9\u90e8\u5206\u4e5f\u7b97\u662f\u5b9e\u73b0\u8d77\u6765\u6bd4\u8f83\u590d\u6742\u7684\u4e86\uff0c\u56e0\u4e3a\u8981\u5b9e\u73b0 ELF \u6587\u4ef6\u7684\u52a0\u8f7d\u3002</p>"}, {"location": "cs/system/ics/#elf", "title": "ELF \u52a0\u8f7d", "text": "<p>\u53ef\u4ee5\u901a\u8fc7 elf.h \u5bfc\u5165\u4e00\u4e9b\u7ed3\u6784\u4f53\u6765\u8fdb\u884c\u89e3\u6790\u3002\u9996\u5148\u6700\u5f00\u5934\u7684\u662f ELF \u5934\uff08Ehdr\uff09\uff0c\u5148\u8bfb\u53d6\u7136\u540e\u5224\u65ad\u9b54\u6570\u4ee5\u53ca\u673a\u5668\u7c7b\u578b\uff1a <pre><code>Elf32_Ehdr ehdr;\nfread(&amp;ehdr, sizeof(ehdr), 1, fp);\nassert(*(uint32_t*)ehdr.e_ident == *(uint32_t*)ELFMAG);\nassert(ehdr.e_machine == EM_RISCV);\n</code></pre> \u63a5\u7740\u6839\u636e ehdr.e_phoff \u627e\u5230\u7a0b\u5e8f\u8868\u5934\uff0c\u7136\u540e\u8bfb\u53d6 ehdr.e_phnum \u4e2a Phdr\uff1a <pre><code>Elf32_Phdr *phdr = (Elf32_Phdr*)malloc(sizeof(Elf32_Phdr) * ehdr.e_phnum);\nfseek(fp, ehdr.e_phoff, SEEK_SET);\nfread(phdr, sizeof(Elf32_Phdr), ehdr.e_phnum, fp);\n</code></pre> \u7136\u540e\u904d\u5386\u7a0b\u5e8f\u8868\uff0c\u5224\u65ad p_type\uff0c\u5982\u679c\u662f PT_LOAD \u5219\u8bf4\u660e\u662f\u9700\u8981\u52a0\u8f7d\u7684\u90e8\u5206\uff0c\u7136\u540e\u590d\u5236 p_filesz \u4e2a\u5b57\u8282\u5230 p_vaddr \u4f4d\u7f6e\uff0c\u540e\u518d\u9644\u52a0 p_memsz - p_filesz \u4e2a\u5b57\u8282\u7684 0\uff08bss \u6bb5\uff09\u5373\u53ef\u3002\u6700\u540e loader \u9700\u8981\u8fd4\u56de\u7a0b\u5e8f\u5165\u53e3\u5730\u5740\uff0c\u5373 ehdr.e_entry\u3002</p>"}, {"location": "cs/system/ics/#_4", "title": "\u7cfb\u7edf\u8c03\u7528", "text": "<p>\u7cfb\u7edf\u8c03\u7528\u7684\u5b9e\u73b0\u4e5f\u5f88\u7b80\u5355\uff0c\u524d\u9762\u5728 CTE \u4e2d\u5c06 a7 \u4e3a -1 \u7684 ecall \u8bc6\u522b\u4e3a\u4e86 yield\uff08\u5e95\u5c42\u7684 yield \u800c\u975e\u7cfb\u7edf\u8c03\u7528\u7684 yield\uff09\uff0c\u5269\u4f59\u7684\u90fd\u53ef\u4ee5\u8bc6\u522b\u4e3a\u7cfb\u7edf\u8c03\u7528\uff0c\u6307\u5b9a\u4e3a EVENT_SYSCALL\uff0c\u7136\u540e\u5904\u7406\u5c31\u5728 NanOS-lite \u4e2d\u4e86\uff0cirq.c \u4e2d do_event \u63a5\u6536 event\uff0c\u8bc6\u522b\u4e3a EVENT_SYSCALL \u540e\u8c03\u7528 do_syscall\uff0c\u7136\u540e\u518d\u6839\u636e a7 \u7684\u503c\u8fdb\u884c\u76f8\u5e94\u7684\u7cfb\u7edf\u8c03\u7528\u5373\u53ef\u3002\u8fd9\u91cc\u8981\u8bb0\u5f97\u5c06 mepc \u52a0 4 \u5426\u5219\u4f1a\u6b7b\u5faa\u73af\u3002\u5176\u5b9e\u53ef\u4ee5\u9488\u5bf9 EVENT_YIELD \u548c EVENT_SYSCALL \u90fd\u8fdb\u884c mepc += 4\uff0c\u800c\u540e\u9762\u7684\u786c\u4ef6\u4e2d\u65ad\u4f8b\u5982\u65f6\u949f\u4e2d\u65ad\u5219\u4e0d\u9700\u8981\u3002</p> <p>\u5728\u8f6f\u4ef6\u5c42\u9762\u7684\u7cfb\u7edf\u8c03\u7528\u662f\u5728 navy-apps \u7684 libos \u4e2d\u7684\uff0c\u6bcf\u4e2a\u7cfb\u7edf\u8c03\u7528\u51fd\u6570\uff08_exit\u3001_open \u7b49\uff09\u90fd\u4f1a\u8c03\u7528 _syscall_ \u51fd\u6570\uff0c\u5176\u4e2d\u662f\u5185\u8054\u6c47\u7f16\u5e03\u5c40\u5bc4\u5b58\u5668\u540e\u6267\u884c ecall \u6307\u4ee4\uff0c\u7136\u540e\u8fd4\u56de a0 \u7684\u503c\u3002\u7cfb\u7edf\u8c03\u7528\u51fd\u6570\u53ea\u9700\u8981 return _syscall_(SYS_..., ...) \u5373\u53ef\u3002\u6240\u4ee5\u6574\u4e2a\u7cfb\u7edf\u8c03\u7528\u8fc7\u7a0b\u662f\u4ece Navy-apps \u7533\u8bf7\u5f00\u59cb\uff0cNEMU \u6267\u884c ecall \u6307\u4ee4\u8f6c\u5230 AM \u63d0\u4f9b\u7684\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\uff0c\u7136\u540e\u5206\u53d1\u7ed9 NanOS-lite \u5904\u7406\uff0c\u518d\u4e00\u5c42\u5c42\u8fd4\u56de\u3002\u53ef\u89c1\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u5178\u578b\u7684\u8f6f\u786c\u4ef6\u534f\u540c\u7684\u4f8b\u5b50\u3002</p> <p>\u800c\u8fd9\u4e00\u90e8\u5206\u9700\u8981\u5b9e\u73b0 yield exit write brk \u7cfb\u7edf\u8c03\u7528\uff0c\u524d\u4e24\u4e2a\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0cbrk \u8fd9\u91cc\u4e5f\u6bd4\u8f83\u597d\u5199\uff0c\u56e0\u4e3a\u8fdb\u884c\u7684\u5e76\u4e0d\u662f\u771f\u6b63\u7684\u5806\u7ba1\u7406\uff0c\u800c\u662f\u6a21\u62df\u8fbe\u5230\u4e86\u7c7b\u4f3c\u80fd\u8dd1\u7684\u6548\u679c\u3002</p> <p>\u800c write \u5728\u5199\u7684\u65f6\u5019\u5c31\u51fa\u4e86\u4e00\u70b9\u95ee\u9898\uff0c\u8fd0\u884c\u8d77\u6765\u4e00\u76f4\u90fd\u662f printf \u53ea\u4f1a\u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26\uff0c\u5f88\u5947\u602a\uff0c\u6211\u5f53\u65f6\u53c8\u6000\u7591\u662f printf \u51fa\u4e86\u95ee\u9898\u3002\u6700\u540e\u9010\u4e00\u6392\u67e5\u53d1\u73b0\u662f write \u7cfb\u7edf\u8c03\u7528\u7684\u8fd4\u56de\u503c\u6ca1\u6709\u4f20\u51fa\u53bb\uff0c\u5bfc\u81f4\u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26\u5c31\u7ed3\u675f\u4e86\u3002</p>"}, {"location": "cs/system/ics/#pa33", "title": "PA3.3", "text": "<p>\u8fd9\u4e00\u90e8\u5206\u8981\u5b8c\u5584\u4e00\u4e2a\u7b80\u6613\u7684\u6587\u4ef6\u7cfb\u7edf\uff08\u5185\u5bb9\u56fa\u5b9a\u3001\u5927\u5c0f\u56fa\u5b9a\u3001\u6ca1\u6709\u76ee\u5f55\u2026\u2026\uff09\uff0c\u7136\u540e\u5c06\u8bbe\u5907\u62bd\u8c61\u4e3a\u865a\u62df\u6587\u4ef6\uff0c\u518d\u5b8c\u5584 Navy-apps \u7684\u4e00\u7cfb\u5217\u5e93\u6765\u8fd0\u884c\u8d77\u5404\u79cd\u5404\u6837\u7684\u7a0b\u5e8f\u3002</p>"}, {"location": "cs/system/ics/#_5", "title": "\u6587\u4ef6\u7cfb\u7edf", "text": "<p>\u8fd9\u91cc\u7684\u6587\u4ef6\u7cfb\u7edf\u6574\u4f53\u5b58\u50a8\u5728 ramdisk.img \u4e2d\uff0c\u901a\u8fc7 resource.S \u4e2d\u7684 .incbin \u52a0\u8f7d\u8fdb\u6765\u3002\u7136\u540e\u6bcf\u4e00\u4e2a\u6587\u4ef6\u90fd\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u7ed3\u6784\u4f53\u6765\u8bb0\u5f55\uff1a <pre><code>typedef size_t (*ReadFn) (void *buf, size_t offset, size_t len);\ntypedef size_t (*WriteFn) (const void *buf, size_t offset, size_t len);\ntypedef struct {\n    char *name;\n    size_t size;\n    size_t disk_offset;\n    ReadFn read;\n    WriteFn write;\n    size_t open_offset;\n} Finfo;\n</code></pre> \u7136\u540e\u901a\u8fc7\u4e00\u4e2a Finfo \u7684\u6570\u7ec4\u6765\u5728\u6587\u4ef6\u63cf\u8ff0\u7b26\u548c Finfo \u4e4b\u95f4\u8fdb\u884c\u6620\u5c04\u3002\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u6211\u89c9\u5f97\u5f88\u5de7\u5999\u7684\u5730\u65b9\uff0c\u5c31\u662f\u5728\u7f16\u8bd1 Navy-apps \u7684\u8fc7\u7a0b\u4e2d\uff0c\u6240\u6709\u53ef\u6267\u884c\u6587\u4ef6\u548c\u7d20\u6750\u90fd\u4f1a\u5b58\u5728 fsimg \u6587\u4ef6\u5939\u4e0b\uff0c\u7136\u540e Makefile \u4e2d\u7684\u811a\u672c\u4f1a\u5c06\u5176\u6253\u5305\u6210\u4e00\u4e2a ramdisk.img\uff0c\u7136\u540e\u540c\u65f6\u63d0\u53d6\u51fa name\u3001size\u3001disk_offset \u7684\u4fe1\u606f\u683c\u5f0f\u5316\u5230\u4e00\u4e2a files.h \u4e2d\u3002\u5728\u5b9a\u4e49 Finfo \u6570\u7ec4\u7684\u65f6\u5019\u76f4\u63a5 include \u8fdb\u6765\uff0c\u5c31\u5728\u7f16\u8bd1\u65f6\u5b8c\u6210\u4e86\u6587\u4ef6\u7cfb\u7edf\u5168\u90e8\u5185\u5bb9\u7684\u521d\u59cb\u5316\u3002</p> <p>\u5bf9\u4e8e\u865a\u62df\u6587\u4ef6\uff0c\u76f4\u63a5\u5b9a\u4e49\u7684\u65f6\u5019\u52a0\u4e0a\u5bf9\u5e94\u7684\u540d\u5b57\uff0c\u7136\u540e\u6307\u5b9a\u7279\u6709\u7684 read \u548c write\uff0c\u5728\u6267\u884c fs_read fs_write \u7684\u65f6\u5019\u5982\u679c read write \u4e0d\u4e3a NULL \u5219\u8c03\u7528\uff0c\u5426\u5219\u8c03\u7528 ramdisk_read ramdisk_write\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u6587\u4ef6\u7cfb\u7edf\u7684\u57fa\u672c\u529f\u80fd\u3002 <pre><code>enum { FD_STDIN, FD_STDOUT, FD_STDERR, FD_FB, FD_EVENTS };\nstatic Finfo file_table[] = {\n    [FD_STDIN]  = { \"stdin\", 0, 0, invalid_read, invalid_write },\n    [FD_STDOUT] = { \"stdout\", 0, 0, invalid_read, serial_write },\n    [FD_STDERR] = { \"stderr\", 0, 0, invalid_read, serial_write },\n    [FD_FB]     = { \"/dev/fb\", 0, 0, invalid_read, fb_write },\n    [FD_EVENTS] = { \"/dev/events\", 0, 0, events_read, invalid_write },\n    {\"/proc/dispinfo\", 0, 0, dispinfo_read, invalid_write },\n#include \"files.h\"\n};\n</code></pre> \u9664\u6b64\u4e4b\u5916 Finfo \u8fd8\u9700\u8981\u7ef4\u62a4 open_offset\uff0c\u8fd9\u91cc\u6211\u5f53\u65f6\u7406\u89e3\u9519\u4e86\uff0c\u5b9e\u9645\u4e0a\u5e94\u8be5\u662f\u8ddd\u79bb disk_offset \u7684\u504f\u79fb\uff0c\u800c\u6211\u7406\u89e3\u4e3a\u4e86\u5728 ramdisk \u4e2d\u6574\u4f53\u7684\u504f\u79fb\uff0c\u4e0d\u8fc7\u5b9e\u73b0\u540e\u7684\u6700\u7ec8\u6548\u679c\u8fd8\u662f\u4e00\u6837\u7684\u3002</p>"}, {"location": "cs/system/ics/#load", "title": "load \u5bf9\u9f50\u5f02\u5e38", "text": "<p>\u8fd9\u4e2a\u95ee\u9898\u4e5f debug \u4e86\u597d\u4e45\uff0c\u8bf4\u8d77\u6765\u4e5f\u5f88\u795e\u5947\uff0c\u8fd9\u4e2a bug \u6765\u81ea PA2.2 \u4f46\u4e00\u76f4\u6ca1\u53d1\u73b0\uff0c\u76f4\u5230 PA4.1 \u624d\u901a\u8fc7 difftest \u53d1\u73b0\uff0c\u800c\u5b9e\u9645\u51fa\u95ee\u9898\u7684\u5730\u65b9\u53c8\u662f\u5728 PA3.3 \u8fd9\u91cc\u5199\u8fc7\u7684 ramdisk_read\u3002</p> <p>PA4.1 \u53d1\u73b0\u95ee\u9898\u7684\u65f6\u5019\u5f88\u5947\u602a\uff0cdifftest \u7684 ref \u83ab\u540d\u5176\u5999\u5730\u8df3\u5230\u4e86 mtvec \u5f02\u5e38\u5904\u7406\u51fd\u6570\u4f4d\u7f6e\uff0c\u800c dut \u7ee7\u7eed\u5f80\u4e0b\u8fd0\u884c\uff0c\u5bfc\u81f4 pc \u51fa\u73b0\u4e86\u4e0d\u540c\u3002\u8fd4\u56de\u53bb\u770b\u51fa\u9519\u7684 pc \u4f4d\u7f6e\u7684\u6307\u4ee4\uff0c\u7adf\u7136\u662f\u4e00\u6761 load \u6307\u4ee4\u3002\u5f53\u65f6\u6211\u8fd8\u4ee5\u4e3a\u662f\u4ec0\u4e48\u5947\u602a\u7684\u65f6\u949f\u4e2d\u65ad\u5565\u7684\uff0c\u6bd5\u7adf\u5173\u6389\u4e86 difftest \u662f\u5b8c\u5168\u53ef\u4ee5\u8dd1\u8d77\u6765\u7684\u3002</p> <p>\u56e0\u4e3a difftest \u53d1\u73b0\u5f02\u5e38\u540e\u5c31\u9000\u51fa\u4e86\uff0c\u4e0d\u80fd\u8ba9 ref \u7ee7\u7eed\u8fd0\u884c\uff0c\u6240\u4ee5\u5f53\u65f6\u6211\u5c31\u56f0\u5728\u8fd9\u91cc\u4e86\uff0c\u4ee5\u4e3a\u4e0d\u597d\u518d\u8c03\u8bd5\u4e86\u3002\u4f46\u7a81\u7136\u53cd\u5e94\u8fc7\u6765\u518d\u53d1\u751f\u5f02\u5e38\u7684\u65f6\u5019\uff0c\u8fd9\u65f6 trap \u539f\u56e0\u5c31\u5df2\u7ecf\u5b58\u5230 mcause \u91cc\u4e86\uff0c\u800c\u8fd9\u65f6\u6211\u662f\u53ef\u4ee5\u8f93\u51fa ref \u4e2d mcause \u7684\u503c\u7684\u3002\u4e00\u8f93\u51fa\u6765\u770b\uff0c\u7adf\u7136\u662f 4\uff0c\u4e5f\u5c31\u662f Load Address Misaligned\u3002\u9664\u6b64\u4e4b\u5916\u6309\u7167 RISC-V \u7684\u89c4\u5b9a\u8fd9\u65f6\u8bd5\u56fe\u8bbf\u95ee\u7684\u5730\u5740\u4f1a\u88ab\u5b58\u5230 mtval \u5bc4\u5b58\u5668\u4e2d\uff0c\u6240\u4ee5\u6211\u53c8\u52a0\u4e86\u8fd9\u4e2a\uff0c\u7136\u540e\u540c\u65f6\u8f93\u51fa\uff0c\u53d1\u73b0\u662f ramdisk \u4e2d\u7684\u5730\u5740\uff0c\u800c\u8fd9\u4e2a\u5730\u5740\u4e0d\u662f 4 \u7684\u500d\u6570\u3002</p> <p>\u6211\u56de\u5fc6\u8d77\u6765\u4e4b\u524d\u6587\u6863\u4e2d\u6709\u4e00\u4e2a\u5730\u65b9\u8bf4\u5230\u4e86 Spike \u4e0d\u5141\u8bb8\u4e0d\u5bf9\u9f50\u7684\u8bbf\u95ee\uff0c\u7136\u540e\u7ffb\u4e86\u4e00\u904d\u53d1\u73b0\u662f\u5728 PA2.2\uff0c\u540c\u65f6\u91cc\u9762\u4e5f\u8bf4\u4e86\u8fd9\u5927\u6982\u662f\u7531\u4e8e klib \u5b9e\u73b0\u9519\u8bef\u5f15\u8d77\u7684\u3002\u518d\u6df1\u5165\u8c03\u4e86\u4e00\u4e0b\u53d1\u73b0\u786e\u5b9e\uff0c\u95ee\u9898\u6765\u81ea\u4e8e memcpy\u3002\u6211\u5f53\u65f6\u76f4\u63a5\u9009\u7528\u4e86 copilot \u63d0\u4f9b\u7684\u5199\u6cd5\uff0c\u4e5f\u5c31\u662f\u5148\u5c1d\u8bd5\u4e00\u4e2a int \u4e00\u4e2a int \u62f7\u8d1d\uff0c\u6700\u540e\u4e0d\u5230\u4e00\u4e2a int \u4e86\u518d\u9010 byte \u62f7\u8d1d\u3002\u8fd9\u91cc\u5c31\u5ffd\u7565\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u5982\u679c\u6700\u5f00\u59cb\u7684\u5730\u5740\u4e0d\u662f 4 \u7684\u500d\u6570\uff0c\u90a3\u4e48\u8bfb\u53d6\u4e00\u4e2a int \u5c31\u662f\u4e0d\u5bf9\u9f50\u7684\u8bbf\u95ee\uff0c\u867d\u7136 NEMU \u4e2d\u6ca1\u95ee\u9898\uff0c\u4f46 Spike \u8ba4\u4e3a\u51fa\u4e86\u95ee\u9898\uff0c\u8fdb\u5165\u4e86\u5f02\u5e38\u5904\u7406\u3002</p> <p>\u6240\u4ee5\u89e3\u51b3\u65b9\u6848\u662f\u4fee\u6539 memcpy\uff0c\u5148\u62f7\u8d1d\u5b57\u8282\u5230\u5bf9\u9f50\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u518d\u4ee5 int \u4e3a\u5355\u4f4d\u62f7\u8d1d\u3002\u4e0d\u8fc7\u8fd8\u662f\u61d2\u5f97\u5199\u4e86\uff0c\u5c31\u5168\u90e8\u9010\u5b57\u8282\u62f7\u8d1d\u4e86\u3002</p>"}, {"location": "cs/system/ics/#navy", "title": "Navy \u5e93\u8865\u5145", "text": "<p>\u8fd9\u91cc\u8981\u5b8c\u5584\u5b9a\u70b9\u7b97\u6570 fixedpt \u5e93\uff0cNDL \u5e93\uff0cminiSDL \u5e93\u3002\u524d\u4e24\u4e2a\u90fd\u6ca1\u4ec0\u4e48\u5927\u95ee\u9898\u3002</p> <p>\u5728\u5b9e\u73b0 NDL_DrawRect \u7684\u65f6\u5019\u6700\u5f00\u59cb\u8fd8\u662f\u7ed5\u4e86\u4e00\u4e0b\u7684\u3002\u5b83\u7684\u76ee\u6807\u662f\u5728\u663e\u793a\u5668\u4e2d\u753b\u4e00\u4e2a\u77e9\u5f62\uff0c\u4e5f\u5c31\u662f\u5c06\u77e9\u5f62\u7684\u6570\u636e\u586b\u5199\u5230 frame buffer \u4e2d\uff0c\u4e5f\u5c31\u662f\u5199\u5165 /dev/fb \u8fd9\u4e2a\u865a\u62df\u6587\u4ef6\u3002\u800c\u6211\u5f53\u65f6\u5c31\u88ab\u8fd9\u4e2a\u64cd\u4f5c\u56f0\u4f4f\u4e86\uff0c\u56e0\u4e3a\u5199\u7684\u65f6\u5019\u53c2\u6570\u5c31\u53ea\u6709 offset \u548c len\uff0c\u800c\u9700\u8981\u8868\u793a\u7684\u5462\uff0c\u662f\u4e00\u4e2a\u77e9\u5f62\u7684\u8303\u56f4\uff0c\u6240\u4ee5\u6211\u5c31\u60f3\u4e86\u4e00\u4e2a\u975e\u5e38\u6c99\u96d5\u7684\u529e\u6cd5\uff0c\u5c06\u5de6\u4e0a\u89d2 (x, y) \u5206\u9ad8 16 \u4f4d\u548c\u4f4e 16 \u4f4d\u5199\u5165 offset\uff0c\u7136\u540e\u957f\u548c\u5bbd\u540c\u6837\u5199\u5165 len \u4e2d\uff0c\u6700\u540e\u5728 fb_write \u4e2d\u7279\u6b8a\u5904\u7406\u7684\u5230 x y w h\u3002\u8fd9\u6837\u8dd1\u662f\u80fd\u8dd1\uff0c\u4f46\u662f\u4e00\u65e6\u5c06 Navy-apps \u653e\u5728 native \u4e0a\u8fd0\u884c\u5c31\u4e0d\u884c\u4e86\uff08\u56e0\u4e3a\u8fd9\u65f6\u4f1a\u4f7f\u7528 NDL \u5e93\uff0c\u4f46\u5e95\u5c42\u7684 fb \u5199\u5165\u5904\u7406\u4e0d\u662f NanOS-lite \u505a\u7684\uff0c\u800c\u662f native \u505a\u7684\uff09\u3002</p> <p>\u7136\u540e\u6211\u8bb2\u8fd9\u4e2a\u95ee\u9898\u4ea4\u7ed9\u4e86 copilot\uff0c\u5b83\u4e00\u4e0b\u5c31\u5199\u51fa\u6765\u4e86\uff0c\u89e3\u51b3\u529e\u6cd5\u662f\u901a\u8fc7 for \u5faa\u73af\u4e00\u884c\u4e00\u884c\u5199\u5165 fb\u2026\u2026 \u6211\u771f\u7684\u662f\u8111\u5b50\u9508\u4f4f\u4e86\uff08</p> <p>\u7136\u540e\u6bd4\u8f83\u75db\u82e6\u7684\u5c31\u662f miniSDL \u5e93\u4e86\uff0c\u8fd9\u65f6\u7684\u8fd0\u884c\u5c31\u662f\u8f6f\u4ef6\u8c03\u7528 SDL\uff0cSDL \u8c03\u7528 NDL\uff0cNDL \u5199\u5165 fb\uff0cfb_write \u5199\u5165 VGA \u8bbe\u5907\u8fd9\u6837\u7684\u5173\u7cfb\u3002\u8fd9\u4e2a SDL \u7684 surface\uff0cNDL \u7684 canvas\uff0cfb \u7684\u5927\u5c0f\u4e4b\u95f4\u7684\u5173\u7cfb\u662f\u4e00\u4e2a\u503c\u5f97\u597d\u597d\u8003\u8651\u7684\u95ee\u9898\u3002</p> <ul> <li>\u53ea\u770b NDL \u548c fb<ul> <li>canvas \u662f\u8bb0\u5f55\u5728 NDL \u4e2d\u7684\u5168\u5c40\u6570\u636e</li> <li>\u4ece fb \u4e2d\u83b7\u53d6\u5c4f\u5e55\u5927\u5c0f\u6570\u636e\u5b58\u5728 screen \u4e2d</li> <li>\u7ed8\u56fe\uff08DrawRect\uff09\u7684\u65f6\u5019\u6839\u636e canvas screen x y \u8ba1\u7b97\u51fa\u5728\u5c4f\u5e55\u4e0a\u5b9e\u9645\u7684\u4f4d\u7f6e\u5750\u6807\uff08canvas \u76f8\u5bf9 screen \u5c45\u4e2d\uff09\u7136\u540e\u5199\u5165 fb</li> </ul> </li> <li>\u770b SDL\uff0c\u8fd9\u65f6\u5019\u53ea\u9700\u8981\u8003\u8651\u5b83\u4e0b\u4e00\u5c42\u7684 NDL\uff0c\u800c\u65e0\u9700\u8003\u8651 fb \u7684\u95ee\u9898<ul> <li><code>SDL_UpdateRect(SDL_Surface *s, int x, int y, int w, int h);</code> \u5b9e\u9645\u4e0a\u662f\u63d0\u53d6 s \u4e0a\u4ece (x, y) \u5f00\u59cb\u7684 w*h \u5927\u5c0f\u7684\u77e9\u5f62\uff0c\u7136\u540e\u901a\u8fc7 NDL_DrawRect \u753b\u51fa\u6765\uff0c\u6b64\u65f6\u7684\u53c2\u6570\u4e5f\u662f\u4ece (x, y) \u5f00\u59cb\uff0c\u5bbd\u9ad8\u4e3a w h</li> <li><code>SDL_FillRect</code> \u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u76f4\u63a5\u586b\u5165 surface \u7684 pixels \u5c31\u597d</li> <li><code>SDL_BlitSurface(SDL_Surface *src, SDL_Rect *srcrect, SDL_Surface *dst, SDL_Rect *dstrect);</code> \u5b9e\u9645\u4e0a\u5728\u505a\u7684\u662f\u5c06 src \u4e0a\u7684\u4e00\u90e8\u5206\u77e9\u5f62\u5185\u5bb9\u62f7\u8d1d\u5230 dst \u4e0a\u6307\u5b9a\u7684\u4f4d\u7f6e\uff0c\u5177\u4f53\u4f4d\u7f6e\u548c\u5927\u5c0f\u53c2\u8003 SDL \u6587\u6863\u3002\u800c\u4e14\u8fd9\u91cc\u751a\u81f3\u4e0d\u9700\u8981\u8003\u8651 NDL\uff0c\u53ea\u8981\u590d\u5236\u8fc7\u53bb\u4e86\u5c31\u597d</li> </ul> </li> </ul> <p>\u90fd\u8c03\u597d\u4e4b\u540e\u5c31\u53ef\u4ee5\u6210\u529f\u8fd0\u884c NSlider\u3001MENU\u3001NTerm\u3001Flappy Bird\u3001\u4ed9\u5251\u5947\u4fa0\u4f20\u7b49\u63d0\u4f9b\u597d\u7684\u7a0b\u5e8f\u4e86\u3002\u6700\u540e\u7684 execve \u7cfb\u7edf\u8c03\u7528\u8fd9\u91cc\u4e5f\u53ea\u9700\u8981\u76f4\u63a5 load \u4e00\u4e2a\u65b0\u7a0b\u5e8f\u8fdb\u6765\u5c31\u53ef\u4ee5\u4e86\u3002</p>"}, {"location": "cs/system/ics/#pa4", "title": "PA4", "text": ""}, {"location": "cs/system/ics/#pa41", "title": "PA4.1", "text": "<p>\u8fd9\u4e00\u90e8\u5206\u8981\u5b9e\u73b0\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u7684\u521b\u5efa\uff0c\u5305\u62ec\u5185\u6838\u8fdb\u7a0b\u548c\u7528\u6237\u8fdb\u7a0b\uff0c\u6b64\u5916\u7528\u6237\u8fdb\u7a0b\u52a0\u8f7d\u65f6\u8fd8\u9700\u8981\u4e3a\u5176\u5e03\u5c40\u597d argc argv envp \u7684\u53c2\u6570\u6808\u3002</p> <p>\u5bf9\u4e8e\u5185\u6838\u8fdb\u7a0b\uff0c\u8981\u5b9e\u73b0\u7684\u6709\u4e3a mstatus \u8d4b\u521d\u503c\u3001\u8bbe\u7f6e mepc \u4e3a\u5165\u53e3\u70b9\u3001\u8bbe\u7f6e a0 \u4e3a\u53c2\u6570\uff0c\u8bbe\u7f6e sp \u4e3a\u6808\u7a7a\u95f4\u5f00\u5934\u7b49\u3002\u7528\u6237\u8fdb\u7a0b\u7c7b\u4f3c\u3002</p> <p>\u800c\u8fd9\u91cc\u7528\u6237\u8fdb\u7a0b\u7684\u52a0\u8f7d\u5219\u9700\u8981\u4e00\u4e2a\u65b0\u7684\u51fd\u6570 context_uload \u6765\u5b8c\u6210\uff0c\u5176\u4e2d\u8981\u8fdb\u884c\u53c2\u6570\u7684\u5e03\u5c40\u3002\u5177\u4f53\u6765\u8bb2\u5c31\u662f\u4ece\u6808\u9876\uff08\u9ad8\u5730\u5740\uff09\u5f00\u59cb\u4f9d\u6b21\u5b58\u653e envp \u5404\u4e2a\u5b57\u7b26\u4e32\uff0cargv \u5404\u4e2a\u5b57\u7b26\u4e32\uff0c\u7a7a\u4e00\u4e2a\uff08envp \u6570\u7ec4\u6700\u540e\u7684 NULL\uff09\uff0c\u7136\u540e\u5012\u5e8f\u5b58\u653e envp \u6570\u7ec4\uff08\u5185\u5bb9\u662f\u6307\u5411\u524d\u9762\u5404\u4e2a\u5b57\u7b26\u4e32\u7684\u6307\u9488\uff09\uff0c\u7a7a\u4e00\u4e2a\uff08argv \u6570\u7ec4\u6700\u540e\u7684 NULL\uff09\uff0c\u7136\u540e\u5012\u5e8f\u5b58\u653e argv \u6570\u7ec4\uff0c\u6700\u540e\u5b58\u653e argc\u3002\u7136\u540e\u7528\u6237\u6808\u4ece\u540e\u9762\u5f00\u59cb\u5411\u4f4e\u5730\u5740\u5ef6\u4f38\u3002\u5177\u4f53\u5c31\u5f88\u597d\u5b9e\u73b0\u4e86\u3002</p>"}, {"location": "cs/system/ics/#pa42", "title": "PA4.2", "text": "<p>\u8fd9\u4e00\u90e8\u5206\u8981\u5b9e\u73b0\u5206\u9875\u673a\u5236\uff0c\u505a\u8fd9\u91cc\u7684\u65f6\u5019\u5b66\u6821\u7684\u7cfb\u7edf\u8bfe\u7a0b\u8fd8\u6ca1\u6709\u964d\u5230\u865a\u62df\u5185\u5b58\u7ba1\u7406\u7684\u90e8\u5206\uff0cRISC-V \u624b\u518c\u9605\u8bfb\u5f53\u65f6\u4e5f\u8df3\u8fc7\u4e86\u8fd9\u91cc\uff0c\u53ef\u80fd\u7406\u89e3\u7684\u8fd8\u662f\u4e0d\u591f\u900f\u5f7b\uff0c\u53ea\u662f\u80fd\u8dd1\u800c\u5df2\uff0c\u6240\u4ee5\u5c31\u4e0d\u518d\u8fd9\u91cc\u8be6\u7ec6\u5199\u4e86\u3002\u5177\u4f53\u4f1a\u5728\u7cfb\u7edf\u8bb2\u5230\u7684\u65f6\u5019\u5199\u5230\u90a3\u91cc\uff0c\u4ee5\u53ca RISC-V \u624b\u518c\u4e4b\u540e\u518d\u8be6\u7ec6\u8bfb\u4e86\u4e4b\u540e\u518d\u8865\u5145\u8fdb\u53bb\u3002</p> <p>\u8fd9\u91cc\u5f53\u65f6\u8c03\u8bd5\u7684\u4e00\u4e2a\u56f0\u96be\u662f\u5b9e\u73b0\u4e86\u5206\u9875\u673a\u5236\u4e4b\u540e difftest \u65f6 mstatus \u603b\u662f\u5bf9\u4e0d\u4e0a\uff0c\u7136\u540e\u4ed4\u7ec6\u4fee\u6539\u4e86 ecall\u3001mret \u7684\u5b9e\u73b0\uff0c\u7ed3\u679c\u5f02\u5e38\u53f7\u53c8\u5bf9\u4e0d\u4e0a\u4e86\uff088/11\uff0c\u5927\u6982\u662f\u7279\u6743\u7ea7\u8bb0\u5f55\u7684\u95ee\u9898\uff09\u3002\u800c\u4e14 ref \u4e5f\u4f1a\u629b\u51fa 7 \u53f7\u5f02\u5e38\uff0c\u4e5f\u5c31\u662f Store/AMO Access Fault\uff0c\u5927\u6982\u662f\u5206\u9875\u673a\u5236\u5bfc\u81f4\u7684\u6743\u9650\u95ee\u9898\uff0c\u6839\u636e\u5b9e\u9a8c\u624b\u518c\u7684\u63d0\u793a\uff0c\u7ed9\u9875\u8868\u9879\u52a0\u4e86\u4e9b flag \u7b97\u662f\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u4f46\u662f\u7279\u6743\u7ea7\u7ed5\u6765\u7ed5\u53bb\u4e0d\u592a\u6e05\u695a\u600e\u4e48\u6539\uff0c\u6709\u70b9\u590d\u6742\u3002\u800c\u4e14\u540e\u9762\u5230\u4e86\u65f6\u949f\u4e2d\u65ad\u5c31\u8981\u629b\u5f03 difftest \u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u76f4\u63a5\u5f00\u6446\u4e86\u3002</p>"}, {"location": "cs/system/ics/#pa43", "title": "PA4.3", "text": "<p>\u6700\u540e\u8fd9\u90e8\u5206\u65f6\u949f\u4e2d\u65ad\u548c\u62a2\u5360\u5f0f\u8c03\u5ea6\u5176\u5b9e\u90fd\u8fd8\u597d\u5199\u3002\u4f46\u662f\u540e\u9762\u5185\u6838\u6808\u548c\u7528\u6237\u6808\u5207\u6362\u770b\u7684\u6709\u70b9\u8ff7\u8ff7\u7cca\u7cca\u4e86\uff0c\u53ef\u80fd\u662f\u5206\u9875\u673a\u5236\u5c31\u4e0d\u592a\u719f\u7684\u7f18\u6545\uff0c\u4e5f\u662f\u5199\u5f97\u80fd\u8dd1\u5c31\u884c\u4e86\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8bb0\u4e86\uff0c\u4e4b\u540e\u7406\u89e3\u6e05\u695a\u4e86\u518d\u8865\u5145\u3002</p> <p>\u603b\u4e4b\u8fd9\u5c31\u662f\u80fd\u56de\u5fc6\u8d77\u6765\u7684\u5168\u90e8\u503c\u5f97\u4e00\u8bb0\u7684\u5185\u5bb9\u4e86\u3002</p>"}, {"location": "cs/system/ics/#_6", "title": "\u9057\u7559\u95ee\u9898", "text": "<p>\u7b2c\u4e00\u904d\u5237 PA\uff0c\u4e5f\u60f3\u7740\u65e2\u7136\u6709\u4e86\u70b9\u57fa\u7840\uff0c\u90a3\u5c31\u5c3d\u5feb\u5b8c\u6210\uff08\u7559\u51fa\u7684\u65f6\u95f4\u8fd8\u80fd\u5e72\u70b9\u522b\u7684\uff09\uff0c\u867d\u7136\u8bf4\u5fc5\u505a\u4efb\u52a1\u90fd\u5b8c\u6210\u4e86\uff0c\u4f46\u662f\u8fd8\u662f\u6709\u4e00\u4e9b\u9009\u505a\u4efb\u52a1\u8fd8\u6ca1\u505a\uff0c\u7559\u4e86\u4e00\u70b9\u9057\u61be\u3002\u4ee5\u540e\u6709\u673a\u4f1a\u4e8c\u5237\u7684\u65f6\u5019\u518d\u5b8c\u6574\u5b8c\u6210\uff08\u6211\u4f30\u8ba1\u53ef\u80fd\u4f1a\u5495\uff09\u3002</p> <ul> <li>PA2.2 trace \u6709\u70b9\u8bef\u89e3\u4e86\uff0c\u6211\u4ee5\u4e3a\u90fd\u662f\u5728 sdb \u4e2d\u901a\u8fc7\u547d\u4ee4\u624b\u52a8\u8f93\u51fa\u7684\uff0c\u4f46\u5176\u5b9e\u5728\u89e6\u53d1\u7684\u65f6\u5019\u76f4\u63a5 Log \u51fa\u6765\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9</li> <li>PA2.2 klib \u6ca1\u6709\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5199\u5b8c\u4e86\u76f4\u63a5\u5f00\u8dd1</li> <li>PA2.3 \u58f0\u5361\u5b9e\u73b0\u4e86\uff0c\u4f46\u662f\u542c\u8d77\u6765\u6709\u6742\u97f3\uff0c\u53ef\u80fd\u662f\u5199\u7684\u6709\u70b9\u95ee\u9898\uff0c\u6ca1\u518d\u7ec6\u8c03\uff0c\u540e\u9762\u58f0\u5361\u76f8\u5173\u7684\u9009\u505a\u4e5f\u6ca1\u518d\u505a</li> <li>PA2.3 \u6700\u540e\u9009\u505a\u7684\u4f18\u5316 LiteNES\u3001\u5728 NEMU \u4e0a\u8dd1 NEMU \u7684\u4e24\u4e2a\u5b9e\u9a8c\u770b\u8d77\u6765\u633a\u6709\u8da3\uff0c\u4f46\u6ca1\u505a</li> <li>PA3.2 \u9009\u505a\u7684\u201d\u652f\u6301\u591a\u4e2a ELF \u7684 ftrace\u201c\u6ca1\u505a\uff0c\u8fd8\u8981\u8bfb\u53d6\u3001\u8fd8\u8981\u89e3\u6790\u3001\u8fd8\u8981\u8ba1\u7b97\uff0c\u61d2\u5f97\u5199\u4e86\uff08x</li> <li>PA3.3 \u5728 Navy \u4e0a\u8fd0\u884c am-kernels\u3001fceux\u3001oslab \u4ee5\u53ca\u5e26\u58f0\u97f3\u7684\u7a0b\u5e8f\uff0c\u8fd9\u4e9b\u9009\u505a\u90fd\u6ca1\u505a</li> <li>PA3.3 \u81ea\u7531\u5f00\u5173 difftest\uff0c\u5feb\u7167\u529f\u80fd\u90fd\u6ca1\u505a\uff0c\u56e0\u4e3a\u6211\u597d\u50cf\u4e5f\u6ca1\u600e\u4e48\u7528\u8fc7 sdb \u6765\u8c03\u8bd5\uff0c\u800c\u4e14 difftest \u4e0d\u7528\u7684\u65f6\u5019\u6211\u5c31\u76f4\u63a5\u5173\u6389\u4e86</li> <li>PA4.2 \u6dfb\u52a0\u5206\u9875\u673a\u5236\u540e\u66b4\u9732\u51fa\u4e86 NEMU \u7684\u7279\u6743\u7ea7\u7ba1\u7406\u6ca1\u505a\u597d\uff0c\u5bfc\u81f4 difftest \u51fa\u73b0\u4e86\u95ee\u9898\uff08mstatus \u5bf9\u4e0d\u4e0a\uff0c\u6216\u8005\u8bbf\u5b58\u6743\u9650\u5f02\u5e38\uff09\uff0c\u8c03\u4e86\u534a\u5929\u6ca1\u8c03\u597d\uff0c\u6682\u65f6\u653e\u5f03\u4e86\uff08\u53cd\u6b63\u5feb\u5230\u65f6\u949f\u4e2d\u65ad\u4e5f\u8981\u629b\u5f03 difftest \u4e86\uff09</li> <li>PA4.3 \u5185\u6838\u6808\u7528\u6237\u6808\u5207\u6362\uff0c\u8fd8\u6709\u524d\u9762\u7684\u5206\u9875\u673a\u5236\u914d\u5408\u8d77\u6765\uff0c\u53ef\u80fd\u8fd8\u9700\u8981\u518d\u6df1\u5165\u7406\u89e3\u7406\u89e3</li> <li>PA4.3 \u6700\u540e\u9009\u505a\u7684\u8fd0\u884c ONScripter \u90e8\u5206\u90fd\u6ca1\u6709\u505a\uff08\u6709\u58f0\u97f3\u548c\u78c1\u76d8\u7684\u5185\u5bb9\uff09</li> <li>\u6700\u540e\u5173\u4e8e ISA\uff0cx86 \u7684\u770b\u8d77\u6765\u4e5f\u6709\u70b9\u610f\u601d\uff08\u867d\u7136\u53d6\u6307\u8bd1\u7801\u770b\u8d77\u6765\u6709\u4e9b\u7e41\u7410\uff09\uff0c\u800c\u4e14\u4ee5\u540e\u5e94\u8be5\u4e5f\u4f1a\u8f83\u591a\u63a5\u89e6\uff0c\u6216\u8bb8\u53ef\u4ee5\u770b\u770b\u3002mips \u7684\u540e\u671f\u770b\u8d77\u6765\u5c31\u6709\u70b9\u75db\u82e6\u9762\u5177\uff0c\u5305\u62ec difftest \u5206\u652f\u5ef6\u8fdf\u7684\u5904\u7406\uff0c\u8fd8\u6709\u5947\u602a\u5206\u9875\u673a\u5236\u4ec0\u4e48\u7684\uff0c\u53ef\u80fd\u4e0d\u4f1a\u5c1d\u8bd5</li> </ul>"}]}